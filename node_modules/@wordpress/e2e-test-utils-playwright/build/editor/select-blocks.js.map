{
  "version": 3,
  "sources": ["../../src/editor/select-blocks.ts"],
  "sourcesContent": ["/**\n * External dependencies\n */\nimport type { Locator } from '@playwright/test';\n\n/**\n * Internal dependencies\n */\nimport type { Editor } from './index';\n\nexport async function selectBlocks(\n\tthis: Editor,\n\tstartSelectorOrLocator: string | Locator,\n\tendSelectorOrLocator?: string | Locator\n) {\n\tconst startBlock =\n\t\ttypeof startSelectorOrLocator === 'string'\n\t\t\t? this.canvas.locator( startSelectorOrLocator )\n\t\t\t: startSelectorOrLocator;\n\n\tconst endBlock =\n\t\ttypeof endSelectorOrLocator === 'string'\n\t\t\t? this.canvas.locator( endSelectorOrLocator )\n\t\t\t: endSelectorOrLocator;\n\n\tconst startClientId = await startBlock.getAttribute( 'data-block' );\n\tconst endClientId = await endBlock?.getAttribute( 'data-block' );\n\n\tif ( endClientId ) {\n\t\tawait this.page.evaluate(\n\t\t\t( [ startId, endId ] ) => {\n\t\t\t\t// @ts-ignore\n\t\t\t\twp.data\n\t\t\t\t\t.dispatch( 'core/block-editor' )\n\t\t\t\t\t.multiSelect( startId, endId );\n\t\t\t},\n\t\t\t[ startClientId, endClientId ]\n\t\t);\n\t} else {\n\t\tawait this.page.evaluate(\n\t\t\t( [ clientId ] ) => {\n\t\t\t\t// @ts-ignore\n\t\t\t\twp.data.dispatch( 'core/block-editor' ).selectBlock( clientId );\n\t\t\t},\n\t\t\t[ startClientId ]\n\t\t);\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA,eAAsB,aAErB,wBACA,sBACC;AACD,QAAM,aACL,OAAO,2BAA2B,WAC/B,KAAK,OAAO,QAAS,sBAAuB,IAC5C;AAEJ,QAAM,WACL,OAAO,yBAAyB,WAC7B,KAAK,OAAO,QAAS,oBAAqB,IAC1C;AAEJ,QAAM,gBAAgB,MAAM,WAAW,aAAc,YAAa;AAClE,QAAM,cAAc,MAAM,UAAU,aAAc,YAAa;AAE/D,MAAK,aAAc;AAClB,UAAM,KAAK,KAAK;AAAA,MACf,CAAE,CAAE,SAAS,KAAM,MAAO;AAEzB,WAAG,KACD,SAAU,mBAAoB,EAC9B,YAAa,SAAS,KAAM;AAAA,MAC/B;AAAA,MACA,CAAE,eAAe,WAAY;AAAA,IAC9B;AAAA,EACD,OAAO;AACN,UAAM,KAAK,KAAK;AAAA,MACf,CAAE,CAAE,QAAS,MAAO;AAEnB,WAAG,KAAK,SAAU,mBAAoB,EAAE,YAAa,QAAS;AAAA,MAC/D;AAAA,MACA,CAAE,aAAc;AAAA,IACjB;AAAA,EACD;AACD;",
  "names": []
}
