{
  "version": 3,
  "sources": ["../../../src/calendar/date-range-calendar/index.tsx"],
  "sourcesContent": ["/**\n * External dependencies\n */\nimport { differenceInCalendarDays } from 'date-fns';\nimport { DayPicker, rangeContainsModifiers } from 'react-day-picker';\nimport { enUS } from 'react-day-picker/locale';\n/**\n * WordPress dependencies\n */\nimport { useMemo, useState, useCallback } from '@wordpress/element';\n/**\n * Internal dependencies\n */\nimport { COMMON_PROPS, MODIFIER_CLASSNAMES } from '../utils/constants';\nimport { clampNumberOfMonths } from '../utils/misc';\nimport { useControlledValue } from '../../utils/hooks';\nimport { useLocalizationProps } from '../utils/use-localization-props';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function usePreviewRange({\n  selected,\n  hoveredDate,\n  excludeDisabled,\n  min,\n  max,\n  disabled\n}) {\n  return useMemo(() => {\n    if (!hoveredDate || !selected?.from) {\n      return;\n    }\n    let previewHighlight;\n    let potentialNewRange;\n\n    // Hovering on a date before the start of the selected range\n    if (hoveredDate < selected.from) {\n      var _selected$to;\n      previewHighlight = {\n        from: hoveredDate,\n        to: selected.from\n      };\n      potentialNewRange = {\n        from: hoveredDate,\n        to: (_selected$to = selected.to) !== null && _selected$to !== void 0 ? _selected$to : selected.from\n      };\n    } else if (selected.to && hoveredDate > selected.from && hoveredDate < selected.to) {\n      // Hovering on a date between the start and end of the selected range\n      previewHighlight = {\n        from: selected.from,\n        to: hoveredDate\n      };\n      potentialNewRange = {\n        from: selected.from,\n        to: hoveredDate\n      };\n    } else if (hoveredDate > selected.from) {\n      var _selected$to2;\n      // Hovering on a date after the end of the selected range (either\n      // because it's greater than selected.to, or because it's not defined)\n      previewHighlight = {\n        from: (_selected$to2 = selected.to) !== null && _selected$to2 !== void 0 ? _selected$to2 : selected.from,\n        to: hoveredDate\n      };\n      potentialNewRange = {\n        from: selected.from,\n        to: hoveredDate\n      };\n    }\n    if (min !== undefined && min > 0 && potentialNewRange && differenceInCalendarDays(potentialNewRange.to, potentialNewRange.from) < min) {\n      previewHighlight = {\n        from: hoveredDate,\n        to: hoveredDate\n      };\n    }\n    if (max !== undefined && max > 0 && potentialNewRange && differenceInCalendarDays(potentialNewRange.to, potentialNewRange.from) > max) {\n      previewHighlight = {\n        from: hoveredDate,\n        to: hoveredDate\n      };\n    }\n    if (excludeDisabled && disabled && potentialNewRange && rangeContainsModifiers(potentialNewRange, disabled)) {\n      previewHighlight = {\n        from: hoveredDate,\n        to: hoveredDate\n      };\n    }\n    return previewHighlight;\n  }, [selected, hoveredDate, excludeDisabled, min, max, disabled]);\n}\n\n/**\n * `DateRangeCalendar` is a React component that provides a customizable calendar\n * interface for **date range** selection.\n *\n * The component is built with accessibility in mind and follows ARIA best\n * practices for calendar widgets. It provides keyboard navigation, screen reader\n * support, and customizable labels for internationalization.\n */\nexport const DateRangeCalendar = ({\n  defaultSelected,\n  selected: selectedProp,\n  onSelect,\n  numberOfMonths = 1,\n  excludeDisabled,\n  min,\n  max,\n  disabled,\n  locale = enUS,\n  timeZone,\n  ...props\n}) => {\n  const localizationProps = useLocalizationProps({\n    locale,\n    timeZone,\n    mode: 'range'\n  });\n  const onChange = useCallback((selected, triggerDate, modifiers, e) => {\n    // Convert internal `null` to `undefined` for the public event handler.\n    onSelect?.(selected !== null && selected !== void 0 ? selected : undefined, triggerDate, modifiers, e);\n  }, [onSelect]);\n  const [selected, setSelected] = useControlledValue({\n    defaultValue: defaultSelected,\n    value: selectedProp,\n    onChange\n  });\n  const [hoveredDate, setHoveredDate] = useState(undefined);\n\n  // Compute the preview range for hover effect\n  const previewRange = usePreviewRange({\n    selected,\n    hoveredDate,\n    excludeDisabled,\n    min,\n    max,\n    disabled\n  });\n  const modifiers = useMemo(() => {\n    return {\n      preview: previewRange,\n      preview_start: previewRange?.from,\n      preview_end: previewRange?.to\n    };\n  }, [previewRange]);\n  return /*#__PURE__*/_jsx(DayPicker, {\n    ...COMMON_PROPS,\n    ...localizationProps,\n    ...props,\n    mode: \"range\",\n    numberOfMonths: clampNumberOfMonths(numberOfMonths),\n    disabled: disabled,\n    excludeDisabled: excludeDisabled,\n    min: min,\n    max: max,\n    selected: selected !== null && selected !== void 0 ? selected : undefined,\n    onSelect: setSelected,\n    onDayMouseEnter: date => setHoveredDate(date),\n    onDayMouseLeave: () => setHoveredDate(undefined),\n    modifiers: modifiers,\n    modifiersClassNames: MODIFIER_CLASSNAMES\n  });\n};"],
  "mappings": "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",
  "names": ["selected", "modifiers", "_jsx"]
}
