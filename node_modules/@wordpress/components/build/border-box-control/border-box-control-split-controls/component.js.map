{
  "version": 3,
  "sources": ["../../../src/border-box-control/border-box-control-split-controls/component.tsx"],
  "sourcesContent": ["/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useMemo, useState } from '@wordpress/element';\nimport { useMergeRefs } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport BorderBoxControlVisualizer from '../border-box-control-visualizer';\nimport { BorderControl } from '../../border-control';\nimport { Grid } from '../../grid';\nimport { contextConnect } from '../../context';\nimport { useBorderBoxControlSplitControls } from './hook';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst BorderBoxControlSplitControls = (props, forwardedRef) => {\n  const {\n    centeredClassName,\n    colors,\n    disableCustomColors,\n    enableAlpha,\n    enableStyle,\n    onChange,\n    popoverPlacement,\n    popoverOffset,\n    rightAlignedClassName,\n    size = 'default',\n    value,\n    __experimentalIsRenderedInSidebar,\n    ...otherProps\n  } = useBorderBoxControlSplitControls(props);\n\n  // Use internal state instead of a ref to make sure that the component\n  // re-renders when the popover's anchor updates.\n  const [popoverAnchor, setPopoverAnchor] = useState(null);\n\n  // Memoize popoverProps to avoid returning a new object every time.\n  const popoverProps = useMemo(() => popoverPlacement ? {\n    placement: popoverPlacement,\n    offset: popoverOffset,\n    anchor: popoverAnchor,\n    shift: true\n  } : undefined, [popoverPlacement, popoverOffset, popoverAnchor]);\n  const sharedBorderControlProps = {\n    colors,\n    disableCustomColors,\n    enableAlpha,\n    enableStyle,\n    isCompact: true,\n    __experimentalIsRenderedInSidebar,\n    size,\n    __shouldNotWarnDeprecated36pxSize: true\n  };\n  const mergedRef = useMergeRefs([setPopoverAnchor, forwardedRef]);\n  return /*#__PURE__*/_jsxs(Grid, {\n    ...otherProps,\n    ref: mergedRef,\n    gap: 3,\n    children: [/*#__PURE__*/_jsx(BorderBoxControlVisualizer, {\n      value: value,\n      size: size\n    }), /*#__PURE__*/_jsx(BorderControl, {\n      className: centeredClassName,\n      hideLabelFromVision: true,\n      label: __('Top border'),\n      onChange: newBorder => onChange(newBorder, 'top'),\n      __unstablePopoverProps: popoverProps,\n      value: value?.top,\n      ...sharedBorderControlProps\n    }), /*#__PURE__*/_jsx(BorderControl, {\n      hideLabelFromVision: true,\n      label: __('Left border'),\n      onChange: newBorder => onChange(newBorder, 'left'),\n      __unstablePopoverProps: popoverProps,\n      value: value?.left,\n      ...sharedBorderControlProps\n    }), /*#__PURE__*/_jsx(BorderControl, {\n      className: rightAlignedClassName,\n      hideLabelFromVision: true,\n      label: __('Right border'),\n      onChange: newBorder => onChange(newBorder, 'right'),\n      __unstablePopoverProps: popoverProps,\n      value: value?.right,\n      ...sharedBorderControlProps\n    }), /*#__PURE__*/_jsx(BorderControl, {\n      className: centeredClassName,\n      hideLabelFromVision: true,\n      label: __('Bottom border'),\n      onChange: newBorder => onChange(newBorder, 'bottom'),\n      __unstablePopoverProps: popoverProps,\n      value: value?.bottom,\n      ...sharedBorderControlProps\n    })]\n  });\n};\nconst ConnectedBorderBoxControlSplitControls = contextConnect(BorderBoxControlSplitControls, 'BorderBoxControlSplitControls');\nexport default ConnectedBorderBoxControlSplitControls;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA,kBAAmB;AACnB,qBAAkC;AAClC,qBAA6B;AAK7B,2CAAuC;AACvC,4BAA8B;AAC9B,kBAAqB;AACrB,qBAA+B;AAC/B,kBAAiD;AACjD,yBAA2C;AAC3C,MAAM,gCAAgC,CAAC,OAAO,iBAAiB;AAC7D,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,OAAO;AAAA,IACP;AAAA,IACA;AAAA,IACA,GAAG;AAAA,EACL,QAAI,8CAAiC,KAAK;AAI1C,QAAM,CAAC,eAAe,gBAAgB,QAAI,yBAAS,IAAI;AAGvD,QAAM,mBAAe,wBAAQ,MAAM,mBAAmB;AAAA,IACpD,WAAW;AAAA,IACX,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,OAAO;AAAA,EACT,IAAI,QAAW,CAAC,kBAAkB,eAAe,aAAa,CAAC;AAC/D,QAAM,2BAA2B;AAAA,IAC/B;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,WAAW;AAAA,IACX;AAAA,IACA;AAAA,IACA,mCAAmC;AAAA,EACrC;AACA,QAAM,gBAAY,6BAAa,CAAC,kBAAkB,YAAY,CAAC;AAC/D,SAAoB,uCAAAA,MAAM,kBAAM;AAAA,IAC9B,GAAG;AAAA,IACH,KAAK;AAAA,IACL,KAAK;AAAA,IACL,UAAU,CAAc,uCAAAC,KAAK,qCAAAC,SAA4B;AAAA,MACvD;AAAA,MACA;AAAA,IACF,CAAC,GAAgB,uCAAAD,KAAK,qCAAe;AAAA,MACnC,WAAW;AAAA,MACX,qBAAqB;AAAA,MACrB,WAAO,gBAAG,YAAY;AAAA,MACtB,UAAU,eAAa,SAAS,WAAW,KAAK;AAAA,MAChD,wBAAwB;AAAA,MACxB,OAAO,OAAO;AAAA,MACd,GAAG;AAAA,IACL,CAAC,GAAgB,uCAAAA,KAAK,qCAAe;AAAA,MACnC,qBAAqB;AAAA,MACrB,WAAO,gBAAG,aAAa;AAAA,MACvB,UAAU,eAAa,SAAS,WAAW,MAAM;AAAA,MACjD,wBAAwB;AAAA,MACxB,OAAO,OAAO;AAAA,MACd,GAAG;AAAA,IACL,CAAC,GAAgB,uCAAAA,KAAK,qCAAe;AAAA,MACnC,WAAW;AAAA,MACX,qBAAqB;AAAA,MACrB,WAAO,gBAAG,cAAc;AAAA,MACxB,UAAU,eAAa,SAAS,WAAW,OAAO;AAAA,MAClD,wBAAwB;AAAA,MACxB,OAAO,OAAO;AAAA,MACd,GAAG;AAAA,IACL,CAAC,GAAgB,uCAAAA,KAAK,qCAAe;AAAA,MACnC,WAAW;AAAA,MACX,qBAAqB;AAAA,MACrB,WAAO,gBAAG,eAAe;AAAA,MACzB,UAAU,eAAa,SAAS,WAAW,QAAQ;AAAA,MACnD,wBAAwB;AAAA,MACxB,OAAO,OAAO;AAAA,MACd,GAAG;AAAA,IACL,CAAC,CAAC;AAAA,EACJ,CAAC;AACH;AACA,MAAM,6CAAyC,+BAAe,+BAA+B,+BAA+B;AAC5H,IAAO,oBAAQ;",
  "names": ["_jsxs", "_jsx", "BorderBoxControlVisualizer"]
}
