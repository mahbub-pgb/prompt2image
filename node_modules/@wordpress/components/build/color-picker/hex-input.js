"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var hex_input_exports = {};
__export(hex_input_exports, {
  HexInput: () => HexInput
});
module.exports = __toCommonJS(hex_input_exports);
var import_colord = require("colord");
var import_i18n = require("@wordpress/i18n");
var import_input_control = require("../input-control");
var import_text = require("../text");
var import_colors_values = require("../utils/colors-values");
var import_input_prefix_wrapper = __toESM(require("../input-control/input-prefix-wrapper"));
var import_jsx_runtime = require("react/jsx-runtime");
const HexInput = ({
  color,
  onChange,
  enableAlpha
}) => {
  const handleChange = (nextValue) => {
    if (!nextValue) {
      return;
    }
    const hexValue = nextValue.startsWith("#") ? nextValue : "#" + nextValue;
    onChange((0, import_colord.colord)(hexValue));
  };
  const stateReducer = (state, action) => {
    const nativeEvent = action.payload?.event?.nativeEvent;
    if ("insertFromPaste" !== nativeEvent?.inputType) {
      return {
        ...state
      };
    }
    const value = state.value?.startsWith("#") ? state.value.slice(1).toUpperCase() : state.value?.toUpperCase();
    return {
      ...state,
      value
    };
  };
  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_input_control.InputControl, {
    prefix: /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_input_prefix_wrapper.default, {
      children: /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_text.Text, {
        color: import_colors_values.COLORS.theme.accent,
        lineHeight: 1,
        children: "#"
      })
    }),
    value: color.toHex().slice(1).toUpperCase(),
    onChange: handleChange,
    maxLength: enableAlpha ? 9 : 7,
    label: (0, import_i18n.__)("Hex color"),
    hideLabelFromVision: true,
    size: "__unstable-large",
    __unstableStateReducer: stateReducer,
    __unstableInputWidth: "9em"
  });
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  HexInput
});
//# sourceMappingURL=hex-input.js.map
