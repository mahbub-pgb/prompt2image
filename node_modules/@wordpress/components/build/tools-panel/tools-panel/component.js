"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var component_exports = {};
__export(component_exports, {
  ToolsPanel: () => ToolsPanel,
  default: () => component_default
});
module.exports = __toCommonJS(component_exports);
var import_tools_panel_header = __toESM(require("../tools-panel-header"));
var import_context = require("../context");
var import_hook = require("./hook");
var import_grid = require("../../grid");
var import_context2 = require("../../context");
var import_jsx_runtime = require("react/jsx-runtime");
const UnconnectedToolsPanel = (props, forwardedRef) => {
  const {
    children,
    label,
    panelContext,
    resetAllItems,
    toggleItem,
    headingLevel,
    dropdownMenuProps,
    ...toolsPanelProps
  } = (0, import_hook.useToolsPanel)(props);
  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_grid.Grid, {
    ...toolsPanelProps,
    columns: 2,
    ref: forwardedRef,
    children: /* @__PURE__ */ (0, import_jsx_runtime.jsxs)(import_context.ToolsPanelContext.Provider, {
      value: panelContext,
      children: [/* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_tools_panel_header.default, {
        label,
        resetAll: resetAllItems,
        toggleItem,
        headingLevel,
        dropdownMenuProps
      }), children]
    })
  });
};
const ToolsPanel = (0, import_context2.contextConnect)(UnconnectedToolsPanel, "ToolsPanel");
var component_default = ToolsPanel;
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  ToolsPanel
});
//# sourceMappingURL=component.js.map
