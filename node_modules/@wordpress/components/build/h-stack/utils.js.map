{
  "version": 3,
  "sources": ["../../src/h-stack/utils.ts"],
  "sourcesContent": ["/**\n * External dependencies\n */\n\n/**\n * Internal dependencies\n */\n\nimport { isValueDefined } from '../utils/values';\nconst H_ALIGNMENTS = {\n  bottom: {\n    align: 'flex-end',\n    justify: 'center'\n  },\n  bottomLeft: {\n    align: 'flex-end',\n    justify: 'flex-start'\n  },\n  bottomRight: {\n    align: 'flex-end',\n    justify: 'flex-end'\n  },\n  center: {\n    align: 'center',\n    justify: 'center'\n  },\n  edge: {\n    align: 'center',\n    justify: 'space-between'\n  },\n  left: {\n    align: 'center',\n    justify: 'flex-start'\n  },\n  right: {\n    align: 'center',\n    justify: 'flex-end'\n  },\n  stretch: {\n    align: 'stretch'\n  },\n  top: {\n    align: 'flex-start',\n    justify: 'center'\n  },\n  topLeft: {\n    align: 'flex-start',\n    justify: 'flex-start'\n  },\n  topRight: {\n    align: 'flex-start',\n    justify: 'flex-end'\n  }\n};\nconst V_ALIGNMENTS = {\n  bottom: {\n    justify: 'flex-end',\n    align: 'center'\n  },\n  bottomLeft: {\n    justify: 'flex-end',\n    align: 'flex-start'\n  },\n  bottomRight: {\n    justify: 'flex-end',\n    align: 'flex-end'\n  },\n  center: {\n    justify: 'center',\n    align: 'center'\n  },\n  edge: {\n    justify: 'space-between',\n    align: 'center'\n  },\n  left: {\n    justify: 'center',\n    align: 'flex-start'\n  },\n  right: {\n    justify: 'center',\n    align: 'flex-end'\n  },\n  stretch: {\n    align: 'stretch'\n  },\n  top: {\n    justify: 'flex-start',\n    align: 'center'\n  },\n  topLeft: {\n    justify: 'flex-start',\n    align: 'flex-start'\n  },\n  topRight: {\n    justify: 'flex-start',\n    align: 'flex-end'\n  }\n};\nexport function getAlignmentProps(alignment, direction = 'row') {\n  if (!isValueDefined(alignment)) {\n    return {};\n  }\n  const isVertical = direction === 'column';\n  const props = isVertical ? V_ALIGNMENTS : H_ALIGNMENTS;\n  const alignmentProps = alignment in props ? props[alignment] : {\n    align: alignment\n  };\n  return alignmentProps;\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,oBAA+B;AAC/B,MAAM,eAAe;AAAA,EACnB,QAAQ;AAAA,IACN,OAAO;AAAA,IACP,SAAS;AAAA,EACX;AAAA,EACA,YAAY;AAAA,IACV,OAAO;AAAA,IACP,SAAS;AAAA,EACX;AAAA,EACA,aAAa;AAAA,IACX,OAAO;AAAA,IACP,SAAS;AAAA,EACX;AAAA,EACA,QAAQ;AAAA,IACN,OAAO;AAAA,IACP,SAAS;AAAA,EACX;AAAA,EACA,MAAM;AAAA,IACJ,OAAO;AAAA,IACP,SAAS;AAAA,EACX;AAAA,EACA,MAAM;AAAA,IACJ,OAAO;AAAA,IACP,SAAS;AAAA,EACX;AAAA,EACA,OAAO;AAAA,IACL,OAAO;AAAA,IACP,SAAS;AAAA,EACX;AAAA,EACA,SAAS;AAAA,IACP,OAAO;AAAA,EACT;AAAA,EACA,KAAK;AAAA,IACH,OAAO;AAAA,IACP,SAAS;AAAA,EACX;AAAA,EACA,SAAS;AAAA,IACP,OAAO;AAAA,IACP,SAAS;AAAA,EACX;AAAA,EACA,UAAU;AAAA,IACR,OAAO;AAAA,IACP,SAAS;AAAA,EACX;AACF;AACA,MAAM,eAAe;AAAA,EACnB,QAAQ;AAAA,IACN,SAAS;AAAA,IACT,OAAO;AAAA,EACT;AAAA,EACA,YAAY;AAAA,IACV,SAAS;AAAA,IACT,OAAO;AAAA,EACT;AAAA,EACA,aAAa;AAAA,IACX,SAAS;AAAA,IACT,OAAO;AAAA,EACT;AAAA,EACA,QAAQ;AAAA,IACN,SAAS;AAAA,IACT,OAAO;AAAA,EACT;AAAA,EACA,MAAM;AAAA,IACJ,SAAS;AAAA,IACT,OAAO;AAAA,EACT;AAAA,EACA,MAAM;AAAA,IACJ,SAAS;AAAA,IACT,OAAO;AAAA,EACT;AAAA,EACA,OAAO;AAAA,IACL,SAAS;AAAA,IACT,OAAO;AAAA,EACT;AAAA,EACA,SAAS;AAAA,IACP,OAAO;AAAA,EACT;AAAA,EACA,KAAK;AAAA,IACH,SAAS;AAAA,IACT,OAAO;AAAA,EACT;AAAA,EACA,SAAS;AAAA,IACP,SAAS;AAAA,IACT,OAAO;AAAA,EACT;AAAA,EACA,UAAU;AAAA,IACR,SAAS;AAAA,IACT,OAAO;AAAA,EACT;AACF;AACO,SAAS,kBAAkB,WAAW,YAAY,OAAO;AAC9D,MAAI,KAAC,8BAAe,SAAS,GAAG;AAC9B,WAAO,CAAC;AAAA,EACV;AACA,QAAM,aAAa,cAAc;AACjC,QAAM,QAAQ,aAAa,eAAe;AAC1C,QAAM,iBAAiB,aAAa,QAAQ,MAAM,SAAS,IAAI;AAAA,IAC7D,OAAO;AAAA,EACT;AACA,SAAO;AACT;",
  "names": []
}
