"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var dimension_control_exports = {};
__export(dimension_control_exports, {
  DimensionControl: () => DimensionControl,
  default: () => dimension_control_default
});
module.exports = __toCommonJS(dimension_control_exports);
var import_clsx = __toESM(require("clsx"));
var import_i18n = require("@wordpress/i18n");
var import_icon = __toESM(require("../icon"));
var import_select_control = __toESM(require("../select-control"));
var import_sizes = __toESM(require("./sizes"));
var import_context = require("../context");
var import_deprecated = __toESM(require("@wordpress/deprecated"));
var import_deprecated_36px_size = require("../utils/deprecated-36px-size");
var import_jsx_runtime = require("react/jsx-runtime");
const CONTEXT_VALUE = {
  BaseControl: {
    // Temporary during deprecation grace period: Overrides the underlying `__associatedWPComponentName`
    // via the context system to override the value set by SelectControl.
    _overrides: {
      __associatedWPComponentName: "DimensionControl"
    }
  }
};
function DimensionControl(props) {
  const {
    __next40pxDefaultSize = false,
    __nextHasNoMarginBottom = false,
    label,
    value,
    sizes = import_sizes.default,
    icon,
    onChange,
    className = ""
  } = props;
  (0, import_deprecated.default)("wp.components.DimensionControl", {
    since: "6.7",
    version: "7.0"
  });
  (0, import_deprecated_36px_size.maybeWarnDeprecated36pxSize)({
    componentName: "DimensionControl",
    __next40pxDefaultSize,
    size: void 0
  });
  const onChangeSpacingSize = (val) => {
    const theSize = (0, import_sizes.findSizeBySlug)(sizes, val);
    if (!theSize || value === theSize.slug) {
      onChange?.(void 0);
    } else if (typeof onChange === "function") {
      onChange(theSize.slug);
    }
  };
  const formatSizesAsOptions = (theSizes) => {
    const options = theSizes.map(({
      name,
      slug
    }) => ({
      label: name,
      value: slug
    }));
    return [{
      label: (0, import_i18n.__)("Default"),
      value: ""
    }, ...options];
  };
  const selectLabel = /* @__PURE__ */ (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, {
    children: [icon && /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_icon.default, {
      icon
    }), label]
  });
  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_context.ContextSystemProvider, {
    value: CONTEXT_VALUE,
    children: /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_select_control.default, {
      __next40pxDefaultSize,
      __shouldNotWarnDeprecated36pxSize: true,
      __nextHasNoMarginBottom,
      className: (0, import_clsx.default)(className, "block-editor-dimension-control"),
      label: selectLabel,
      hideLabelFromVision: false,
      value,
      onChange: onChangeSpacingSize,
      options: formatSizesAsOptions(sizes)
    })
  });
}
var dimension_control_default = DimensionControl;
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  DimensionControl
});
//# sourceMappingURL=index.js.map
