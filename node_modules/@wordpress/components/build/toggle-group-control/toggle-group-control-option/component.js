"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var component_exports = {};
__export(component_exports, {
  ToggleGroupControlOption: () => ToggleGroupControlOption,
  default: () => component_default
});
module.exports = __toCommonJS(component_exports);
var import_element = require("@wordpress/element");
var import_toggle_group_control_option_base = require("../toggle-group-control-option-base");
var import_jsx_runtime = require("react/jsx-runtime");
function UnforwardedToggleGroupControlOption(props, ref) {
  const {
    label,
    ...restProps
  } = props;
  const optionLabel = restProps["aria-label"] || label;
  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_toggle_group_control_option_base.ToggleGroupControlOptionBase, {
    ...restProps,
    "aria-label": optionLabel,
    ref,
    children: label
  });
}
const ToggleGroupControlOption = (0, import_element.forwardRef)(UnforwardedToggleGroupControlOption);
var component_default = ToggleGroupControlOption;
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  ToggleGroupControlOption
});
//# sourceMappingURL=component.js.map
