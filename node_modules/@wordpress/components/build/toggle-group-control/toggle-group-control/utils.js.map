{
  "version": 3,
  "sources": ["../../../src/toggle-group-control/toggle-group-control/utils.ts"],
  "sourcesContent": ["/**\n * WordPress dependencies\n */\nimport { usePrevious } from '@wordpress/compose';\nimport { useEffect, useRef } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\n\n/**\n * Used to determine, via an internal heuristics, whether an `undefined` value\n * received for the `value` prop should be interpreted as the component being\n * used in uncontrolled mode, or as an \"empty\" value for controlled mode.\n *\n * @param valueProp The received `value`\n */\nexport function useComputeControlledOrUncontrolledValue(valueProp) {\n  const isInitialRenderRef = useRef(true);\n  const prevValueProp = usePrevious(valueProp);\n  const prevIsControlledRef = useRef(false);\n  useEffect(() => {\n    if (isInitialRenderRef.current) {\n      isInitialRenderRef.current = false;\n    }\n  }, []);\n\n  // Assume the component is being used in controlled mode on the first re-render\n  // that has a different `valueProp` from the previous render.\n  const isControlled = prevIsControlledRef.current || !isInitialRenderRef.current && prevValueProp !== valueProp;\n  useEffect(() => {\n    prevIsControlledRef.current = isControlled;\n  }, [isControlled]);\n  if (isControlled) {\n    // When in controlled mode, use `''` instead of `undefined`\n    return {\n      value: valueProp !== null && valueProp !== void 0 ? valueProp : '',\n      defaultValue: undefined\n    };\n  }\n\n  // When in uncontrolled mode, the `value` should be intended as the initial value\n  return {\n    value: undefined,\n    defaultValue: valueProp\n  };\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA,qBAA4B;AAC5B,qBAAkC;AAa3B,SAAS,wCAAwC,WAAW;AACjE,QAAM,yBAAqB,uBAAO,IAAI;AACtC,QAAM,oBAAgB,4BAAY,SAAS;AAC3C,QAAM,0BAAsB,uBAAO,KAAK;AACxC,gCAAU,MAAM;AACd,QAAI,mBAAmB,SAAS;AAC9B,yBAAmB,UAAU;AAAA,IAC/B;AAAA,EACF,GAAG,CAAC,CAAC;AAIL,QAAM,eAAe,oBAAoB,WAAW,CAAC,mBAAmB,WAAW,kBAAkB;AACrG,gCAAU,MAAM;AACd,wBAAoB,UAAU;AAAA,EAChC,GAAG,CAAC,YAAY,CAAC;AACjB,MAAI,cAAc;AAEhB,WAAO;AAAA,MACL,OAAO,cAAc,QAAQ,cAAc,SAAS,YAAY;AAAA,MAChE,cAAc;AAAA,IAChB;AAAA,EACF;AAGA,SAAO;AAAA,IACL,OAAO;AAAA,IACP,cAAc;AAAA,EAChB;AACF;",
  "names": []
}
