"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var index_ios_exports = {};
__export(index_ios_exports, {
  KeyboardAwareFlatList: () => KeyboardAwareFlatList,
  default: () => index_ios_default
});
module.exports = __toCommonJS(index_ios_exports);
var import_react_native = require("react-native");
var import_react_native_reanimated = __toESM(require("react-native-reanimated"));
var import_element = require("@wordpress/element");
var import_compose = require("@wordpress/compose");
var import_use_scroll = __toESM(require("./use-scroll"));
var import_use_text_input_offset = __toESM(require("./use-text-input-offset"));
var import_use_text_input_caret_position = __toESM(require("./use-text-input-caret-position"));
var import_shared = require("./shared");
var import_styles = __toESM(require("./styles.scss"));
var import_jsx_runtime = require("react/jsx-runtime");
const DEFAULT_FONT_SIZE = 16;
const AnimatedFlatList = import_react_native_reanimated.default.createAnimatedComponent(import_react_native.FlatList);
const EMPTY_OBJECT = {};
const KeyboardAwareFlatList = ({
  extraScrollHeight,
  onScroll,
  scrollEnabled,
  shouldPreventAutomaticScroll,
  ...props
}, ref) => {
  const {
    scrollViewRef,
    scrollHandler,
    keyboardOffset,
    scrollToSection,
    scrollToElement,
    onContentSizeChange,
    lastScrollTo
  } = (0, import_use_scroll.default)({
    scrollEnabled,
    shouldPreventAutomaticScroll,
    extraScrollHeight,
    onScroll,
    onSizeChange
  });
  const [getTextInputOffset] = (0, import_use_text_input_offset.default)(scrollEnabled, scrollViewRef);
  const onScrollToTextInput = (0, import_compose.useThrottle)((0, import_element.useCallback)(async (caret) => {
    const {
      caretHeight = DEFAULT_FONT_SIZE
    } = caret !== null && caret !== void 0 ? caret : {};
    const textInputOffset = await getTextInputOffset(caret);
    const hasTextInputOffset = textInputOffset !== null;
    if (hasTextInputOffset) {
      scrollToSection(textInputOffset, caretHeight);
    }
  }, [getTextInputOffset, scrollToSection]), 200, {
    leading: false
  });
  const [currentCaretData] = (0, import_use_text_input_caret_position.default)(scrollEnabled);
  const onSizeChange = (0, import_element.useCallback)(() => onScrollToTextInput(currentCaretData), [currentCaretData, onScrollToTextInput]);
  (0, import_element.useEffect)(() => {
    onScrollToTextInput(currentCaretData);
  }, [currentCaretData, onScrollToTextInput]);
  const contentInset = {
    bottom: keyboardOffset
  };
  const getFlatListRef = (0, import_element.useCallback)((flatListRef) => {
    scrollViewRef.current = flatListRef?.getNativeScrollRef();
  }, [scrollViewRef]);
  (0, import_element.useImperativeHandle)(ref, () => {
    return {
      scrollViewRef: scrollViewRef.current,
      scrollToSection,
      scrollToElement,
      lastScrollTo
    };
  });
  const optimizationProps = props.data?.length > import_shared.OPTIMIZATION_ITEMS_THRESHOLD ? import_shared.OPTIMIZATION_PROPS : EMPTY_OBJECT;
  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_react_native.View, {
    style: import_styles.default.list__container,
    children: /* @__PURE__ */ (0, import_jsx_runtime.jsx)(AnimatedFlatList, {
      ref: getFlatListRef,
      automaticallyAdjustContentInsets: false,
      contentInset,
      keyboardShouldPersistTaps: "handled",
      onContentSizeChange,
      onScroll: scrollHandler,
      scrollEventThrottle: 16,
      style: import_styles.default.list__content,
      ...optimizationProps,
      ...props
    })
  });
};
var index_ios_default = (0, import_element.forwardRef)(KeyboardAwareFlatList);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  KeyboardAwareFlatList
});
//# sourceMappingURL=index.ios.js.map
