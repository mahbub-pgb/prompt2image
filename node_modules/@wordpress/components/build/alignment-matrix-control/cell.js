"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var cell_exports = {};
__export(cell_exports, {
  default: () => Cell
});
module.exports = __toCommonJS(cell_exports);
var import_composite = require("../composite");
var import_tooltip = __toESM(require("../tooltip"));
var import_visually_hidden = require("../visually-hidden");
var import_utils = require("./utils");
var import_styles = require("./styles");
var import_jsx_runtime = require("react/jsx-runtime");
function Cell({
  id,
  value,
  ...props
}) {
  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_tooltip.default, {
    text: import_utils.ALIGNMENT_LABEL[value],
    children: /* @__PURE__ */ (0, import_jsx_runtime.jsxs)(import_composite.Composite.Item, {
      id,
      render: /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_styles.Cell, {
        ...props,
        role: "gridcell"
      }),
      children: [/* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_visually_hidden.VisuallyHidden, {
        children: value
      }), /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_styles.Point, {
        role: "presentation"
      })]
    })
  });
}
//# sourceMappingURL=cell.js.map
