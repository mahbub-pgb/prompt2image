{
  "version": 3,
  "sources": ["../../src/button-group/index.tsx"],
  "sourcesContent": ["/**\n * External dependencies\n */\nimport clsx from 'clsx';\n/**\n * WordPress dependencies\n */\nimport { forwardRef } from '@wordpress/element';\nimport deprecated from '@wordpress/deprecated';\n\n/**\n * Internal dependencies\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction UnforwardedButtonGroup(props, ref) {\n  const {\n    className,\n    __shouldNotWarnDeprecated,\n    ...restProps\n  } = props;\n  const classes = clsx('components-button-group', className);\n  if (!__shouldNotWarnDeprecated) {\n    deprecated('wp.components.ButtonGroup', {\n      since: '6.8',\n      alternative: 'wp.components.__experimentalToggleGroupControl'\n    });\n  }\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    role: \"group\",\n    className: classes,\n    ...restProps\n  });\n}\n\n/**\n * ButtonGroup can be used to group any related buttons together. To emphasize\n * related buttons, a group should share a common container.\n *\n * @deprecated Use `ToggleGroupControl` instead.\n *\n * ```jsx\n * import { Button, ButtonGroup } from '@wordpress/components';\n *\n * const MyButtonGroup = () => (\n *   <ButtonGroup>\n *     <Button variant=\"primary\">Button 1</Button>\n *     <Button variant=\"primary\">Button 2</Button>\n *   </ButtonGroup>\n * );\n * ```\n */\nexport const ButtonGroup = forwardRef(UnforwardedButtonGroup);\nexport default ButtonGroup;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA,kBAAiB;AAIjB,qBAA2B;AAC3B,wBAAuB;AAKvB,yBAA4B;AAC5B,SAAS,uBAAuB,OAAO,KAAK;AAC1C,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA,GAAG;AAAA,EACL,IAAI;AACJ,QAAM,cAAU,YAAAA,SAAK,2BAA2B,SAAS;AACzD,MAAI,CAAC,2BAA2B;AAC9B,0BAAAC,SAAW,6BAA6B;AAAA,MACtC,OAAO;AAAA,MACP,aAAa;AAAA,IACf,CAAC;AAAA,EACH;AACA,SAAoB,uCAAAC,KAAK,OAAO;AAAA,IAC9B;AAAA,IACA,MAAM;AAAA,IACN,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAAC;AACH;AAmBO,MAAM,kBAAc,2BAAW,sBAAsB;AAC5D,IAAO,uBAAQ;",
  "names": ["clsx", "deprecated", "_jsx"]
}
