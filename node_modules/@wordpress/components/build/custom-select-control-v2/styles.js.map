{
  "version": 3,
  "sources": ["../../src/custom-select-control-v2/styles.ts"],
  "sourcesContent": ["import _styled from \"@emotion/styled/base\";\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() { return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\"; }\n/**\n * External dependencies\n */\nimport * as Ariakit from '@ariakit/react';\nimport { css, keyframes } from '@emotion/react';\n/**\n * Internal dependencies\n */\nimport { COLORS, CONFIG } from '../utils';\nimport { space } from '../utils/space';\nimport { chevronIconSize } from '../select-control/styles/select-control-styles';\nimport { fontSizeStyles } from '../input-control/styles/input-control-styles';\n// TODO: extract to common utils and apply to relevant components\nconst ANIMATION_PARAMS = {\n  SLIDE_AMOUNT: '2px',\n  DURATION: '400ms',\n  EASING: 'cubic-bezier( 0.16, 1, 0.3, 1 )'\n};\nconst INLINE_PADDING = {\n  compact: CONFIG.controlPaddingXSmall,\n  small: CONFIG.controlPaddingXSmall,\n  default: CONFIG.controlPaddingX\n};\nconst getSelectSize = (size, heightProperty) => {\n  const sizes = {\n    compact: {\n      [heightProperty]: 32,\n      paddingInlineStart: INLINE_PADDING.compact,\n      paddingInlineEnd: INLINE_PADDING.compact + chevronIconSize\n    },\n    default: {\n      [heightProperty]: 40,\n      paddingInlineStart: INLINE_PADDING.default,\n      paddingInlineEnd: INLINE_PADDING.default + chevronIconSize\n    },\n    small: {\n      [heightProperty]: 24,\n      paddingInlineStart: INLINE_PADDING.small,\n      paddingInlineEnd: INLINE_PADDING.small + chevronIconSize\n    }\n  };\n  return sizes[size] || sizes.default;\n};\nconst getSelectItemSize = size => {\n  // Used to visually align the checkmark with the chevron\n  const checkmarkCorrection = 6;\n  const sizes = {\n    compact: {\n      paddingInlineStart: INLINE_PADDING.compact,\n      paddingInlineEnd: INLINE_PADDING.compact - checkmarkCorrection\n    },\n    default: {\n      paddingInlineStart: INLINE_PADDING.default,\n      paddingInlineEnd: INLINE_PADDING.default - checkmarkCorrection\n    },\n    small: {\n      paddingInlineStart: INLINE_PADDING.small,\n      paddingInlineEnd: INLINE_PADDING.small - checkmarkCorrection\n    }\n  };\n  return sizes[size] || sizes.default;\n};\nexport const Select = /*#__PURE__*/_styled(Ariakit.Select, process.env.NODE_ENV === \"production\" ? {\n  // Do not forward `hasCustomRenderProp` to the underlying Ariakit.Select component\n  shouldForwardProp: prop => prop !== 'hasCustomRenderProp',\n  target: \"e1p3eej77\"\n} : {\n  // Do not forward `hasCustomRenderProp` to the underlying Ariakit.Select component\n  shouldForwardProp: prop => prop !== 'hasCustomRenderProp',\n  target: \"e1p3eej77\",\n  label: \"Select\"\n})(({\n  size,\n  hasCustomRenderProp\n}) => /*#__PURE__*/css(\"display:block;background-color:\", COLORS.theme.background, \";border:none;color:\", COLORS.theme.foreground, \";cursor:pointer;font-family:inherit;text-align:start;user-select:none;width:100%;&[data-focus-visible]{outline:none;}\", getSelectSize(size, hasCustomRenderProp ? 'minHeight' : 'height'), \" \", !hasCustomRenderProp && truncateStyles, \" \", fontSizeStyles({\n  inputSize: size\n}), \";\" + (process.env.NODE_ENV === \"production\" ? \"\" : \";label:Select;\"), process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"), process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");\nconst slideDownAndFade = keyframes({\n  '0%': {\n    opacity: 0,\n    transform: `translateY(-${ANIMATION_PARAMS.SLIDE_AMOUNT})`\n  },\n  '100%': {\n    opacity: 1,\n    transform: 'translateY(0)'\n  }\n});\nexport const SelectPopover = /*#__PURE__*/_styled(Ariakit.SelectPopover, process.env.NODE_ENV === \"production\" ? {\n  target: \"e1p3eej76\"\n} : {\n  target: \"e1p3eej76\",\n  label: \"SelectPopover\"\n})(\"display:flex;flex-direction:column;background-color:\", COLORS.theme.background, \";border-radius:\", CONFIG.radiusSmall, \";border:1px solid \", COLORS.theme.foreground, \";box-shadow:\", CONFIG.elevationMedium, \";z-index:1000000;max-height:min( var( --popover-available-height, 400px ), 400px );overflow:auto;overscroll-behavior:contain;min-width:min-content;&[data-open]{@media not ( prefers-reduced-motion ){animation-duration:\", ANIMATION_PARAMS.DURATION, \";animation-timing-function:\", ANIMATION_PARAMS.EASING, \";animation-name:\", slideDownAndFade, \";will-change:transform,opacity;}}&[data-focus-visible]{outline:none;}\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));\nexport const SelectItem = /*#__PURE__*/_styled(Ariakit.SelectItem, process.env.NODE_ENV === \"production\" ? {\n  target: \"e1p3eej75\"\n} : {\n  target: \"e1p3eej75\",\n  label: \"SelectItem\"\n})(({\n  size\n}) => /*#__PURE__*/css(\"cursor:default;display:flex;align-items:center;justify-content:space-between;font-size:\", CONFIG.fontSize, \";line-height:28px;padding-block:\", space(2), \";scroll-margin:\", space(1), \";user-select:none;&[aria-disabled='true']{cursor:not-allowed;}&[data-active-item]{background-color:\", COLORS.theme.gray[300], \";}\", getSelectItemSize(size), \";\" + (process.env.NODE_ENV === \"production\" ? \"\" : \";label:SelectItem;\"), process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"), process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");\nconst truncateStyles = process.env.NODE_ENV === \"production\" ? {\n  name: \"1h52dri\",\n  styles: \"overflow:hidden;text-overflow:ellipsis;white-space:nowrap\"\n} : {\n  name: \"5u3cjr-truncateStyles\",\n  styles: \"overflow:hidden;text-overflow:ellipsis;white-space:nowrap;label:truncateStyles;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0eWxlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFtTDBCIiwiZmlsZSI6InN0eWxlcy50cyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRXh0ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCAqIGFzIEFyaWFraXQgZnJvbSAnQGFyaWFraXQvcmVhY3QnO1xuaW1wb3J0IHsgY3NzLCBrZXlmcmFtZXMgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG4vKipcbiAqIEludGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQgeyBDT0xPUlMsIENPTkZJRyB9IGZyb20gJy4uL3V0aWxzJztcbmltcG9ydCB7IHNwYWNlIH0gZnJvbSAnLi4vdXRpbHMvc3BhY2UnO1xuaW1wb3J0IHsgY2hldnJvbkljb25TaXplIH0gZnJvbSAnLi4vc2VsZWN0LWNvbnRyb2wvc3R5bGVzL3NlbGVjdC1jb250cm9sLXN0eWxlcyc7XG5pbXBvcnQgeyBmb250U2l6ZVN0eWxlcyB9IGZyb20gJy4uL2lucHV0LWNvbnRyb2wvc3R5bGVzL2lucHV0LWNvbnRyb2wtc3R5bGVzJztcbmltcG9ydCB0eXBlIHsgQ3VzdG9tU2VsZWN0QnV0dG9uU2l6ZSB9IGZyb20gJy4vdHlwZXMnO1xuXG4vLyBUT0RPOiBleHRyYWN0IHRvIGNvbW1vbiB1dGlscyBhbmQgYXBwbHkgdG8gcmVsZXZhbnQgY29tcG9uZW50c1xuY29uc3QgQU5JTUFUSU9OX1BBUkFNUyA9IHtcblx0U0xJREVfQU1PVU5UOiAnMnB4Jyxcblx0RFVSQVRJT046ICc0MDBtcycsXG5cdEVBU0lORzogJ2N1YmljLWJlemllciggMC4xNiwgMSwgMC4zLCAxICknLFxufTtcblxuY29uc3QgSU5MSU5FX1BBRERJTkcgPSB7XG5cdGNvbXBhY3Q6IENPTkZJRy5jb250cm9sUGFkZGluZ1hTbWFsbCxcblx0c21hbGw6IENPTkZJRy5jb250cm9sUGFkZGluZ1hTbWFsbCxcblx0ZGVmYXVsdDogQ09ORklHLmNvbnRyb2xQYWRkaW5nWCxcbn07XG5cbmNvbnN0IGdldFNlbGVjdFNpemUgPSAoXG5cdHNpemU6IE5vbk51bGxhYmxlPCBDdXN0b21TZWxlY3RCdXR0b25TaXplWyAnc2l6ZScgXSA+LFxuXHRoZWlnaHRQcm9wZXJ0eTogJ21pbkhlaWdodCcgfCAnaGVpZ2h0J1xuKSA9PiB7XG5cdGNvbnN0IHNpemVzID0ge1xuXHRcdGNvbXBhY3Q6IHtcblx0XHRcdFsgaGVpZ2h0UHJvcGVydHkgXTogMzIsXG5cdFx0XHRwYWRkaW5nSW5saW5lU3RhcnQ6IElOTElORV9QQURESU5HLmNvbXBhY3QsXG5cdFx0XHRwYWRkaW5nSW5saW5lRW5kOiBJTkxJTkVfUEFERElORy5jb21wYWN0ICsgY2hldnJvbkljb25TaXplLFxuXHRcdH0sXG5cdFx0ZGVmYXVsdDoge1xuXHRcdFx0WyBoZWlnaHRQcm9wZXJ0eSBdOiA0MCxcblx0XHRcdHBhZGRpbmdJbmxpbmVTdGFydDogSU5MSU5FX1BBRERJTkcuZGVmYXVsdCxcblx0XHRcdHBhZGRpbmdJbmxpbmVFbmQ6IElOTElORV9QQURESU5HLmRlZmF1bHQgKyBjaGV2cm9uSWNvblNpemUsXG5cdFx0fSxcblx0XHRzbWFsbDoge1xuXHRcdFx0WyBoZWlnaHRQcm9wZXJ0eSBdOiAyNCxcblx0XHRcdHBhZGRpbmdJbmxpbmVTdGFydDogSU5MSU5FX1BBRERJTkcuc21hbGwsXG5cdFx0XHRwYWRkaW5nSW5saW5lRW5kOiBJTkxJTkVfUEFERElORy5zbWFsbCArIGNoZXZyb25JY29uU2l6ZSxcblx0XHR9LFxuXHR9O1xuXG5cdHJldHVybiBzaXplc1sgc2l6ZSBdIHx8IHNpemVzLmRlZmF1bHQ7XG59O1xuXG5jb25zdCBnZXRTZWxlY3RJdGVtU2l6ZSA9IChcblx0c2l6ZTogTm9uTnVsbGFibGU8IEN1c3RvbVNlbGVjdEJ1dHRvblNpemVbICdzaXplJyBdID5cbikgPT4ge1xuXHQvLyBVc2VkIHRvIHZpc3VhbGx5IGFsaWduIHRoZSBjaGVja21hcmsgd2l0aCB0aGUgY2hldnJvblxuXHRjb25zdCBjaGVja21hcmtDb3JyZWN0aW9uID0gNjtcblx0Y29uc3Qgc2l6ZXMgPSB7XG5cdFx0Y29tcGFjdDoge1xuXHRcdFx0cGFkZGluZ0lubGluZVN0YXJ0OiBJTkxJTkVfUEFERElORy5jb21wYWN0LFxuXHRcdFx0cGFkZGluZ0lubGluZUVuZDogSU5MSU5FX1BBRERJTkcuY29tcGFjdCAtIGNoZWNrbWFya0NvcnJlY3Rpb24sXG5cdFx0fSxcblx0XHRkZWZhdWx0OiB7XG5cdFx0XHRwYWRkaW5nSW5saW5lU3RhcnQ6IElOTElORV9QQURESU5HLmRlZmF1bHQsXG5cdFx0XHRwYWRkaW5nSW5saW5lRW5kOiBJTkxJTkVfUEFERElORy5kZWZhdWx0IC0gY2hlY2ttYXJrQ29ycmVjdGlvbixcblx0XHR9LFxuXHRcdHNtYWxsOiB7XG5cdFx0XHRwYWRkaW5nSW5saW5lU3RhcnQ6IElOTElORV9QQURESU5HLnNtYWxsLFxuXHRcdFx0cGFkZGluZ0lubGluZUVuZDogSU5MSU5FX1BBRERJTkcuc21hbGwgLSBjaGVja21hcmtDb3JyZWN0aW9uLFxuXHRcdH0sXG5cdH07XG5cblx0cmV0dXJuIHNpemVzWyBzaXplIF0gfHwgc2l6ZXMuZGVmYXVsdDtcbn07XG5cbmV4cG9ydCBjb25zdCBTZWxlY3QgPSBzdHlsZWQoIEFyaWFraXQuU2VsZWN0LCB7XG5cdC8vIERvIG5vdCBmb3J3YXJkIGBoYXNDdXN0b21SZW5kZXJQcm9wYCB0byB0aGUgdW5kZXJseWluZyBBcmlha2l0LlNlbGVjdCBjb21wb25lbnRcblx0c2hvdWxkRm9yd2FyZFByb3A6ICggcHJvcCApID0+IHByb3AgIT09ICdoYXNDdXN0b21SZW5kZXJQcm9wJyxcbn0gKShcblx0KCB7XG5cdFx0c2l6ZSxcblx0XHRoYXNDdXN0b21SZW5kZXJQcm9wLFxuXHR9OiB7XG5cdFx0c2l6ZTogTm9uTnVsbGFibGU8IEN1c3RvbVNlbGVjdEJ1dHRvblNpemVbICdzaXplJyBdID47XG5cdFx0aGFzQ3VzdG9tUmVuZGVyUHJvcDogYm9vbGVhbjtcblx0fSApID0+IGNzc2Bcblx0XHRkaXNwbGF5OiBibG9jaztcblx0XHRiYWNrZ3JvdW5kLWNvbG9yOiAkeyBDT0xPUlMudGhlbWUuYmFja2dyb3VuZCB9O1xuXHRcdGJvcmRlcjogbm9uZTtcblx0XHRjb2xvcjogJHsgQ09MT1JTLnRoZW1lLmZvcmVncm91bmQgfTtcblx0XHRjdXJzb3I6IHBvaW50ZXI7XG5cdFx0Zm9udC1mYW1pbHk6IGluaGVyaXQ7XG5cdFx0dGV4dC1hbGlnbjogc3RhcnQ7XG5cdFx0dXNlci1zZWxlY3Q6IG5vbmU7XG5cdFx0d2lkdGg6IDEwMCU7XG5cblx0XHQmW2RhdGEtZm9jdXMtdmlzaWJsZV0ge1xuXHRcdFx0b3V0bGluZTogbm9uZTsgLy8gaGFuZGxlZCBieSBJbnB1dEJhc2UgY29tcG9uZW50XG5cdFx0fVxuXG5cdFx0JHsgZ2V0U2VsZWN0U2l6ZSggc2l6ZSwgaGFzQ3VzdG9tUmVuZGVyUHJvcCA/ICdtaW5IZWlnaHQnIDogJ2hlaWdodCcgKSB9XG5cdFx0JHsgISBoYXNDdXN0b21SZW5kZXJQcm9wICYmIHRydW5jYXRlU3R5bGVzIH1cblx0XHQkeyBmb250U2l6ZVN0eWxlcyggeyBpbnB1dFNpemU6IHNpemUgfSApIH1cblx0YFxuKTtcblxuY29uc3Qgc2xpZGVEb3duQW5kRmFkZSA9IGtleWZyYW1lcygge1xuXHQnMCUnOiB7XG5cdFx0b3BhY2l0eTogMCxcblx0XHR0cmFuc2Zvcm06IGB0cmFuc2xhdGVZKC0keyBBTklNQVRJT05fUEFSQU1TLlNMSURFX0FNT1VOVCB9KWAsXG5cdH0sXG5cdCcxMDAlJzogeyBvcGFjaXR5OiAxLCB0cmFuc2Zvcm06ICd0cmFuc2xhdGVZKDApJyB9LFxufSApO1xuXG5leHBvcnQgY29uc3QgU2VsZWN0UG9wb3ZlciA9IHN0eWxlZCggQXJpYWtpdC5TZWxlY3RQb3BvdmVyIClgXG5cdGRpc3BsYXk6IGZsZXg7XG5cdGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG5cblx0YmFja2dyb3VuZC1jb2xvcjogJHsgQ09MT1JTLnRoZW1lLmJhY2tncm91bmQgfTtcblx0Ym9yZGVyLXJhZGl1czogJHsgQ09ORklHLnJhZGl1c1NtYWxsIH07XG5cdGJvcmRlcjogMXB4IHNvbGlkICR7IENPTE9SUy50aGVtZS5mb3JlZ3JvdW5kIH07XG5cdGJveC1zaGFkb3c6ICR7IENPTkZJRy5lbGV2YXRpb25NZWRpdW0gfTtcblxuXHQvKiB6LWluZGV4KFwiLmNvbXBvbmVudHMtcG9wb3ZlclwiKSAqL1xuXHR6LWluZGV4OiAxMDAwMDAwO1xuXG5cdG1heC1oZWlnaHQ6IG1pbiggdmFyKCAtLXBvcG92ZXItYXZhaWxhYmxlLWhlaWdodCwgNDAwcHggKSwgNDAwcHggKTtcblx0b3ZlcmZsb3c6IGF1dG87XG5cdG92ZXJzY3JvbGwtYmVoYXZpb3I6IGNvbnRhaW47XG5cblx0LyogVGhlIHNtYWxsZXN0IHNpemUgd2l0aG91dCBvdmVyZmxvd2luZyB0aGUgY29udGFpbmVyLiAqL1xuXHRtaW4td2lkdGg6IG1pbi1jb250ZW50O1xuXG5cdC8qIEFuaW1hdGlvbiAqL1xuXHQmW2RhdGEtb3Blbl0ge1xuXHRcdEBtZWRpYSBub3QgKCBwcmVmZXJzLXJlZHVjZWQtbW90aW9uICkge1xuXHRcdFx0YW5pbWF0aW9uLWR1cmF0aW9uOiAkeyBBTklNQVRJT05fUEFSQU1TLkRVUkFUSU9OIH07XG5cdFx0XHRhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiAkeyBBTklNQVRJT05fUEFSQU1TLkVBU0lORyB9O1xuXHRcdFx0YW5pbWF0aW9uLW5hbWU6ICR7IHNsaWRlRG93bkFuZEZhZGUgfTtcblx0XHRcdHdpbGwtY2hhbmdlOiB0cmFuc2Zvcm0sIG9wYWNpdHk7XG5cdFx0fVxuXHR9XG5cblx0JltkYXRhLWZvY3VzLXZpc2libGVdIHtcblx0XHQvKiBUaGUgb3V0bGluZSB3aWxsIGJlIG9uIHRoZSB0cmlnZ2VyLCByYXRoZXIgdGhhbiB0aGUgcG9wb3Zlci4gKi9cblx0XHRvdXRsaW5lOiBub25lO1xuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgU2VsZWN0SXRlbSA9IHN0eWxlZCggQXJpYWtpdC5TZWxlY3RJdGVtICkoXG5cdCgge1xuXHRcdHNpemUsXG5cdH06IHtcblx0XHRzaXplOiBOb25OdWxsYWJsZTwgQ3VzdG9tU2VsZWN0QnV0dG9uU2l6ZVsgJ3NpemUnIF0gPjtcblx0fSApID0+IGNzc2Bcblx0XHRjdXJzb3I6IGRlZmF1bHQ7XG5cdFx0ZGlzcGxheTogZmxleDtcblx0XHRhbGlnbi1pdGVtczogY2VudGVyO1xuXHRcdGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2Vlbjtcblx0XHRmb250LXNpemU6ICR7IENPTkZJRy5mb250U2l6ZSB9O1xuXHRcdC8vIFRPRE86IHJlYXNzZXNzIGxpbmUtaGVpZ2h0IGZvciBub24tbGVnYWN5IHYyXG5cdFx0bGluZS1oZWlnaHQ6IDI4cHg7XG5cdFx0cGFkZGluZy1ibG9jazogJHsgc3BhY2UoIDIgKSB9O1xuXHRcdHNjcm9sbC1tYXJnaW46ICR7IHNwYWNlKCAxICkgfTtcblx0XHR1c2VyLXNlbGVjdDogbm9uZTtcblxuXHRcdCZbYXJpYS1kaXNhYmxlZD0ndHJ1ZSddIHtcblx0XHRcdGN1cnNvcjogbm90LWFsbG93ZWQ7XG5cdFx0fVxuXG5cdFx0JltkYXRhLWFjdGl2ZS1pdGVtXSB7XG5cdFx0XHRiYWNrZ3JvdW5kLWNvbG9yOiAkeyBDT0xPUlMudGhlbWUuZ3JheVsgMzAwIF0gfTtcblx0XHR9XG5cblx0XHQkeyBnZXRTZWxlY3RJdGVtU2l6ZSggc2l6ZSApIH1cblx0YFxuKTtcblxuY29uc3QgdHJ1bmNhdGVTdHlsZXMgPSBjc3NgXG5cdG92ZXJmbG93OiBoaWRkZW47XG5cdHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuXHR3aGl0ZS1zcGFjZTogbm93cmFwO1xuYDtcblxuZXhwb3J0IGNvbnN0IFNlbGVjdGVkRXhwZXJpbWVudGFsSGludFdyYXBwZXIgPSBzdHlsZWQuZGl2YFxuXHQkeyB0cnVuY2F0ZVN0eWxlcyB9XG5gO1xuXG5leHBvcnQgY29uc3QgU2VsZWN0ZWRFeHBlcmltZW50YWxIaW50SXRlbSA9IHN0eWxlZC5zcGFuYFxuXHRjb2xvcjogJHsgQ09MT1JTLnRoZW1lLmdyYXlbIDYwMCBdIH07XG5cdG1hcmdpbi1pbmxpbmUtc3RhcnQ6ICR7IHNwYWNlKCAyICkgfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBXaXRoSGludEl0ZW1XcmFwcGVyID0gc3R5bGVkLmRpdmBcblx0ZGlzcGxheTogZmxleDtcblx0anVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuXHRhbGlnbi1pdGVtczogY2VudGVyO1xuXHRmbGV4LXdyYXA6IHdyYXA7XG5cdGZsZXg6IDE7XG5cdGNvbHVtbi1nYXA6ICR7IHNwYWNlKCA0ICkgfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBXaXRoSGludEl0ZW1IaW50ID0gc3R5bGVkLnNwYW5gXG5cdGNvbG9yOiAkeyBDT0xPUlMudGhlbWUuZ3JheVsgNjAwIF0gfTtcblx0dGV4dC1hbGlnbjogaW5pdGlhbDtcblx0bGluZS1oZWlnaHQ6ICR7IENPTkZJRy5mb250TGluZUhlaWdodEJhc2UgfTtcblx0cGFkZGluZy1pbmxpbmUtZW5kOiAkeyBzcGFjZSggMSApIH07XG5cdG1hcmdpbi1ibG9jazogJHsgc3BhY2UoIDEgKSB9O1xuYDtcblxuZXhwb3J0IGNvbnN0IFNlbGVjdGVkSXRlbUNoZWNrID0gc3R5bGVkKCBBcmlha2l0LlNlbGVjdEl0ZW1DaGVjayApYFxuXHRkaXNwbGF5OiBmbGV4O1xuXHRhbGlnbi1pdGVtczogY2VudGVyO1xuXHRtYXJnaW4taW5saW5lLXN0YXJ0OiAkeyBzcGFjZSggMiApIH07XG5cdGZpbGw6IGN1cnJlbnRDb2xvcjtcblxuXHQvLyBLZWVwIHRoZSBjaGVja21hcmsgdmVydGljYWxseSBhbGlnbmVkIGF0IHRoZSB0b3AuIFNpbmNlIHRoZSBpdGVtIHRleHQgaGFzIGFcblx0Ly8gMjhweCBsaW5lIGhlaWdodCBhbmQgdGhlIGNoZWNrbWFyayBpcyAyNHB4IHRhbGwsIGEgKDI4LTI0KS8yID0gMnB4IG1hcmdpblxuXHQvLyBpcyBhcHBsaWVkIHRvIGtlZXAgdGhlIGNvcnJlY3QgYWxpZ25tZW50IGJldHdlZW4gdGhlIHRleHQgYW5kIHRoZSBjaGVja21hcmsuXG5cdGFsaWduLXNlbGY6IHN0YXJ0O1xuXHRtYXJnaW4tYmxvY2stc3RhcnQ6IDJweDtcblxuXHQvLyBTaW5jZSB0aGUgY2hlY2ttYXJrJ3MgZGltZW5zaW9ucyBhcmUgYXBwbGllZCB3aXRoICdlbScgdW5pdHMsIHNldHRpbmcgYVxuXHQvLyBmb250IHNpemUgb2YgMCBhbGxvd3MgdGhlIHNwYWNlIHJlc2VydmVkIGZvciB0aGUgY2hlY2ttYXJrIHRvIGNvbGxhcHNlIGZvclxuXHQvLyBpdGVtcyB0aGF0IGFyZSBub3Qgc2VsZWN0ZWQgb3IgdGhhdCBkb24ndCBoYXZlIGFuIGFzc29jaWF0ZWQgaXRlbSBoaW50LlxuXHRmb250LXNpemU6IDA7XG5cdCR7IFdpdGhIaW50SXRlbVdyYXBwZXIgfSB+ICYsXG5cdCY6bm90KDplbXB0eSkge1xuXHRcdGZvbnQtc2l6ZTogMjRweDsgLy8gU2l6ZSBvZiBjaGVja21hcmsgaWNvblxuXHR9XG5gO1xuIl19 */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\nexport const SelectedExperimentalHintWrapper = /*#__PURE__*/_styled(\"div\", process.env.NODE_ENV === \"production\" ? {\n  target: \"e1p3eej74\"\n} : {\n  target: \"e1p3eej74\",\n  label: \"SelectedExperimentalHintWrapper\"\n})(truncateStyles, \";\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0eWxlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF5THlEIiwiZmlsZSI6InN0eWxlcy50cyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRXh0ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCAqIGFzIEFyaWFraXQgZnJvbSAnQGFyaWFraXQvcmVhY3QnO1xuaW1wb3J0IHsgY3NzLCBrZXlmcmFtZXMgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG4vKipcbiAqIEludGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQgeyBDT0xPUlMsIENPTkZJRyB9IGZyb20gJy4uL3V0aWxzJztcbmltcG9ydCB7IHNwYWNlIH0gZnJvbSAnLi4vdXRpbHMvc3BhY2UnO1xuaW1wb3J0IHsgY2hldnJvbkljb25TaXplIH0gZnJvbSAnLi4vc2VsZWN0LWNvbnRyb2wvc3R5bGVzL3NlbGVjdC1jb250cm9sLXN0eWxlcyc7XG5pbXBvcnQgeyBmb250U2l6ZVN0eWxlcyB9IGZyb20gJy4uL2lucHV0LWNvbnRyb2wvc3R5bGVzL2lucHV0LWNvbnRyb2wtc3R5bGVzJztcbmltcG9ydCB0eXBlIHsgQ3VzdG9tU2VsZWN0QnV0dG9uU2l6ZSB9IGZyb20gJy4vdHlwZXMnO1xuXG4vLyBUT0RPOiBleHRyYWN0IHRvIGNvbW1vbiB1dGlscyBhbmQgYXBwbHkgdG8gcmVsZXZhbnQgY29tcG9uZW50c1xuY29uc3QgQU5JTUFUSU9OX1BBUkFNUyA9IHtcblx0U0xJREVfQU1PVU5UOiAnMnB4Jyxcblx0RFVSQVRJT046ICc0MDBtcycsXG5cdEVBU0lORzogJ2N1YmljLWJlemllciggMC4xNiwgMSwgMC4zLCAxICknLFxufTtcblxuY29uc3QgSU5MSU5FX1BBRERJTkcgPSB7XG5cdGNvbXBhY3Q6IENPTkZJRy5jb250cm9sUGFkZGluZ1hTbWFsbCxcblx0c21hbGw6IENPTkZJRy5jb250cm9sUGFkZGluZ1hTbWFsbCxcblx0ZGVmYXVsdDogQ09ORklHLmNvbnRyb2xQYWRkaW5nWCxcbn07XG5cbmNvbnN0IGdldFNlbGVjdFNpemUgPSAoXG5cdHNpemU6IE5vbk51bGxhYmxlPCBDdXN0b21TZWxlY3RCdXR0b25TaXplWyAnc2l6ZScgXSA+LFxuXHRoZWlnaHRQcm9wZXJ0eTogJ21pbkhlaWdodCcgfCAnaGVpZ2h0J1xuKSA9PiB7XG5cdGNvbnN0IHNpemVzID0ge1xuXHRcdGNvbXBhY3Q6IHtcblx0XHRcdFsgaGVpZ2h0UHJvcGVydHkgXTogMzIsXG5cdFx0XHRwYWRkaW5nSW5saW5lU3RhcnQ6IElOTElORV9QQURESU5HLmNvbXBhY3QsXG5cdFx0XHRwYWRkaW5nSW5saW5lRW5kOiBJTkxJTkVfUEFERElORy5jb21wYWN0ICsgY2hldnJvbkljb25TaXplLFxuXHRcdH0sXG5cdFx0ZGVmYXVsdDoge1xuXHRcdFx0WyBoZWlnaHRQcm9wZXJ0eSBdOiA0MCxcblx0XHRcdHBhZGRpbmdJbmxpbmVTdGFydDogSU5MSU5FX1BBRERJTkcuZGVmYXVsdCxcblx0XHRcdHBhZGRpbmdJbmxpbmVFbmQ6IElOTElORV9QQURESU5HLmRlZmF1bHQgKyBjaGV2cm9uSWNvblNpemUsXG5cdFx0fSxcblx0XHRzbWFsbDoge1xuXHRcdFx0WyBoZWlnaHRQcm9wZXJ0eSBdOiAyNCxcblx0XHRcdHBhZGRpbmdJbmxpbmVTdGFydDogSU5MSU5FX1BBRERJTkcuc21hbGwsXG5cdFx0XHRwYWRkaW5nSW5saW5lRW5kOiBJTkxJTkVfUEFERElORy5zbWFsbCArIGNoZXZyb25JY29uU2l6ZSxcblx0XHR9LFxuXHR9O1xuXG5cdHJldHVybiBzaXplc1sgc2l6ZSBdIHx8IHNpemVzLmRlZmF1bHQ7XG59O1xuXG5jb25zdCBnZXRTZWxlY3RJdGVtU2l6ZSA9IChcblx0c2l6ZTogTm9uTnVsbGFibGU8IEN1c3RvbVNlbGVjdEJ1dHRvblNpemVbICdzaXplJyBdID5cbikgPT4ge1xuXHQvLyBVc2VkIHRvIHZpc3VhbGx5IGFsaWduIHRoZSBjaGVja21hcmsgd2l0aCB0aGUgY2hldnJvblxuXHRjb25zdCBjaGVja21hcmtDb3JyZWN0aW9uID0gNjtcblx0Y29uc3Qgc2l6ZXMgPSB7XG5cdFx0Y29tcGFjdDoge1xuXHRcdFx0cGFkZGluZ0lubGluZVN0YXJ0OiBJTkxJTkVfUEFERElORy5jb21wYWN0LFxuXHRcdFx0cGFkZGluZ0lubGluZUVuZDogSU5MSU5FX1BBRERJTkcuY29tcGFjdCAtIGNoZWNrbWFya0NvcnJlY3Rpb24sXG5cdFx0fSxcblx0XHRkZWZhdWx0OiB7XG5cdFx0XHRwYWRkaW5nSW5saW5lU3RhcnQ6IElOTElORV9QQURESU5HLmRlZmF1bHQsXG5cdFx0XHRwYWRkaW5nSW5saW5lRW5kOiBJTkxJTkVfUEFERElORy5kZWZhdWx0IC0gY2hlY2ttYXJrQ29ycmVjdGlvbixcblx0XHR9LFxuXHRcdHNtYWxsOiB7XG5cdFx0XHRwYWRkaW5nSW5saW5lU3RhcnQ6IElOTElORV9QQURESU5HLnNtYWxsLFxuXHRcdFx0cGFkZGluZ0lubGluZUVuZDogSU5MSU5FX1BBRERJTkcuc21hbGwgLSBjaGVja21hcmtDb3JyZWN0aW9uLFxuXHRcdH0sXG5cdH07XG5cblx0cmV0dXJuIHNpemVzWyBzaXplIF0gfHwgc2l6ZXMuZGVmYXVsdDtcbn07XG5cbmV4cG9ydCBjb25zdCBTZWxlY3QgPSBzdHlsZWQoIEFyaWFraXQuU2VsZWN0LCB7XG5cdC8vIERvIG5vdCBmb3J3YXJkIGBoYXNDdXN0b21SZW5kZXJQcm9wYCB0byB0aGUgdW5kZXJseWluZyBBcmlha2l0LlNlbGVjdCBjb21wb25lbnRcblx0c2hvdWxkRm9yd2FyZFByb3A6ICggcHJvcCApID0+IHByb3AgIT09ICdoYXNDdXN0b21SZW5kZXJQcm9wJyxcbn0gKShcblx0KCB7XG5cdFx0c2l6ZSxcblx0XHRoYXNDdXN0b21SZW5kZXJQcm9wLFxuXHR9OiB7XG5cdFx0c2l6ZTogTm9uTnVsbGFibGU8IEN1c3RvbVNlbGVjdEJ1dHRvblNpemVbICdzaXplJyBdID47XG5cdFx0aGFzQ3VzdG9tUmVuZGVyUHJvcDogYm9vbGVhbjtcblx0fSApID0+IGNzc2Bcblx0XHRkaXNwbGF5OiBibG9jaztcblx0XHRiYWNrZ3JvdW5kLWNvbG9yOiAkeyBDT0xPUlMudGhlbWUuYmFja2dyb3VuZCB9O1xuXHRcdGJvcmRlcjogbm9uZTtcblx0XHRjb2xvcjogJHsgQ09MT1JTLnRoZW1lLmZvcmVncm91bmQgfTtcblx0XHRjdXJzb3I6IHBvaW50ZXI7XG5cdFx0Zm9udC1mYW1pbHk6IGluaGVyaXQ7XG5cdFx0dGV4dC1hbGlnbjogc3RhcnQ7XG5cdFx0dXNlci1zZWxlY3Q6IG5vbmU7XG5cdFx0d2lkdGg6IDEwMCU7XG5cblx0XHQmW2RhdGEtZm9jdXMtdmlzaWJsZV0ge1xuXHRcdFx0b3V0bGluZTogbm9uZTsgLy8gaGFuZGxlZCBieSBJbnB1dEJhc2UgY29tcG9uZW50XG5cdFx0fVxuXG5cdFx0JHsgZ2V0U2VsZWN0U2l6ZSggc2l6ZSwgaGFzQ3VzdG9tUmVuZGVyUHJvcCA/ICdtaW5IZWlnaHQnIDogJ2hlaWdodCcgKSB9XG5cdFx0JHsgISBoYXNDdXN0b21SZW5kZXJQcm9wICYmIHRydW5jYXRlU3R5bGVzIH1cblx0XHQkeyBmb250U2l6ZVN0eWxlcyggeyBpbnB1dFNpemU6IHNpemUgfSApIH1cblx0YFxuKTtcblxuY29uc3Qgc2xpZGVEb3duQW5kRmFkZSA9IGtleWZyYW1lcygge1xuXHQnMCUnOiB7XG5cdFx0b3BhY2l0eTogMCxcblx0XHR0cmFuc2Zvcm06IGB0cmFuc2xhdGVZKC0keyBBTklNQVRJT05fUEFSQU1TLlNMSURFX0FNT1VOVCB9KWAsXG5cdH0sXG5cdCcxMDAlJzogeyBvcGFjaXR5OiAxLCB0cmFuc2Zvcm06ICd0cmFuc2xhdGVZKDApJyB9LFxufSApO1xuXG5leHBvcnQgY29uc3QgU2VsZWN0UG9wb3ZlciA9IHN0eWxlZCggQXJpYWtpdC5TZWxlY3RQb3BvdmVyIClgXG5cdGRpc3BsYXk6IGZsZXg7XG5cdGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG5cblx0YmFja2dyb3VuZC1jb2xvcjogJHsgQ09MT1JTLnRoZW1lLmJhY2tncm91bmQgfTtcblx0Ym9yZGVyLXJhZGl1czogJHsgQ09ORklHLnJhZGl1c1NtYWxsIH07XG5cdGJvcmRlcjogMXB4IHNvbGlkICR7IENPTE9SUy50aGVtZS5mb3JlZ3JvdW5kIH07XG5cdGJveC1zaGFkb3c6ICR7IENPTkZJRy5lbGV2YXRpb25NZWRpdW0gfTtcblxuXHQvKiB6LWluZGV4KFwiLmNvbXBvbmVudHMtcG9wb3ZlclwiKSAqL1xuXHR6LWluZGV4OiAxMDAwMDAwO1xuXG5cdG1heC1oZWlnaHQ6IG1pbiggdmFyKCAtLXBvcG92ZXItYXZhaWxhYmxlLWhlaWdodCwgNDAwcHggKSwgNDAwcHggKTtcblx0b3ZlcmZsb3c6IGF1dG87XG5cdG92ZXJzY3JvbGwtYmVoYXZpb3I6IGNvbnRhaW47XG5cblx0LyogVGhlIHNtYWxsZXN0IHNpemUgd2l0aG91dCBvdmVyZmxvd2luZyB0aGUgY29udGFpbmVyLiAqL1xuXHRtaW4td2lkdGg6IG1pbi1jb250ZW50O1xuXG5cdC8qIEFuaW1hdGlvbiAqL1xuXHQmW2RhdGEtb3Blbl0ge1xuXHRcdEBtZWRpYSBub3QgKCBwcmVmZXJzLXJlZHVjZWQtbW90aW9uICkge1xuXHRcdFx0YW5pbWF0aW9uLWR1cmF0aW9uOiAkeyBBTklNQVRJT05fUEFSQU1TLkRVUkFUSU9OIH07XG5cdFx0XHRhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiAkeyBBTklNQVRJT05fUEFSQU1TLkVBU0lORyB9O1xuXHRcdFx0YW5pbWF0aW9uLW5hbWU6ICR7IHNsaWRlRG93bkFuZEZhZGUgfTtcblx0XHRcdHdpbGwtY2hhbmdlOiB0cmFuc2Zvcm0sIG9wYWNpdHk7XG5cdFx0fVxuXHR9XG5cblx0JltkYXRhLWZvY3VzLXZpc2libGVdIHtcblx0XHQvKiBUaGUgb3V0bGluZSB3aWxsIGJlIG9uIHRoZSB0cmlnZ2VyLCByYXRoZXIgdGhhbiB0aGUgcG9wb3Zlci4gKi9cblx0XHRvdXRsaW5lOiBub25lO1xuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgU2VsZWN0SXRlbSA9IHN0eWxlZCggQXJpYWtpdC5TZWxlY3RJdGVtICkoXG5cdCgge1xuXHRcdHNpemUsXG5cdH06IHtcblx0XHRzaXplOiBOb25OdWxsYWJsZTwgQ3VzdG9tU2VsZWN0QnV0dG9uU2l6ZVsgJ3NpemUnIF0gPjtcblx0fSApID0+IGNzc2Bcblx0XHRjdXJzb3I6IGRlZmF1bHQ7XG5cdFx0ZGlzcGxheTogZmxleDtcblx0XHRhbGlnbi1pdGVtczogY2VudGVyO1xuXHRcdGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2Vlbjtcblx0XHRmb250LXNpemU6ICR7IENPTkZJRy5mb250U2l6ZSB9O1xuXHRcdC8vIFRPRE86IHJlYXNzZXNzIGxpbmUtaGVpZ2h0IGZvciBub24tbGVnYWN5IHYyXG5cdFx0bGluZS1oZWlnaHQ6IDI4cHg7XG5cdFx0cGFkZGluZy1ibG9jazogJHsgc3BhY2UoIDIgKSB9O1xuXHRcdHNjcm9sbC1tYXJnaW46ICR7IHNwYWNlKCAxICkgfTtcblx0XHR1c2VyLXNlbGVjdDogbm9uZTtcblxuXHRcdCZbYXJpYS1kaXNhYmxlZD0ndHJ1ZSddIHtcblx0XHRcdGN1cnNvcjogbm90LWFsbG93ZWQ7XG5cdFx0fVxuXG5cdFx0JltkYXRhLWFjdGl2ZS1pdGVtXSB7XG5cdFx0XHRiYWNrZ3JvdW5kLWNvbG9yOiAkeyBDT0xPUlMudGhlbWUuZ3JheVsgMzAwIF0gfTtcblx0XHR9XG5cblx0XHQkeyBnZXRTZWxlY3RJdGVtU2l6ZSggc2l6ZSApIH1cblx0YFxuKTtcblxuY29uc3QgdHJ1bmNhdGVTdHlsZXMgPSBjc3NgXG5cdG92ZXJmbG93OiBoaWRkZW47XG5cdHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuXHR3aGl0ZS1zcGFjZTogbm93cmFwO1xuYDtcblxuZXhwb3J0IGNvbnN0IFNlbGVjdGVkRXhwZXJpbWVudGFsSGludFdyYXBwZXIgPSBzdHlsZWQuZGl2YFxuXHQkeyB0cnVuY2F0ZVN0eWxlcyB9XG5gO1xuXG5leHBvcnQgY29uc3QgU2VsZWN0ZWRFeHBlcmltZW50YWxIaW50SXRlbSA9IHN0eWxlZC5zcGFuYFxuXHRjb2xvcjogJHsgQ09MT1JTLnRoZW1lLmdyYXlbIDYwMCBdIH07XG5cdG1hcmdpbi1pbmxpbmUtc3RhcnQ6ICR7IHNwYWNlKCAyICkgfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBXaXRoSGludEl0ZW1XcmFwcGVyID0gc3R5bGVkLmRpdmBcblx0ZGlzcGxheTogZmxleDtcblx0anVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuXHRhbGlnbi1pdGVtczogY2VudGVyO1xuXHRmbGV4LXdyYXA6IHdyYXA7XG5cdGZsZXg6IDE7XG5cdGNvbHVtbi1nYXA6ICR7IHNwYWNlKCA0ICkgfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBXaXRoSGludEl0ZW1IaW50ID0gc3R5bGVkLnNwYW5gXG5cdGNvbG9yOiAkeyBDT0xPUlMudGhlbWUuZ3JheVsgNjAwIF0gfTtcblx0dGV4dC1hbGlnbjogaW5pdGlhbDtcblx0bGluZS1oZWlnaHQ6ICR7IENPTkZJRy5mb250TGluZUhlaWdodEJhc2UgfTtcblx0cGFkZGluZy1pbmxpbmUtZW5kOiAkeyBzcGFjZSggMSApIH07XG5cdG1hcmdpbi1ibG9jazogJHsgc3BhY2UoIDEgKSB9O1xuYDtcblxuZXhwb3J0IGNvbnN0IFNlbGVjdGVkSXRlbUNoZWNrID0gc3R5bGVkKCBBcmlha2l0LlNlbGVjdEl0ZW1DaGVjayApYFxuXHRkaXNwbGF5OiBmbGV4O1xuXHRhbGlnbi1pdGVtczogY2VudGVyO1xuXHRtYXJnaW4taW5saW5lLXN0YXJ0OiAkeyBzcGFjZSggMiApIH07XG5cdGZpbGw6IGN1cnJlbnRDb2xvcjtcblxuXHQvLyBLZWVwIHRoZSBjaGVja21hcmsgdmVydGljYWxseSBhbGlnbmVkIGF0IHRoZSB0b3AuIFNpbmNlIHRoZSBpdGVtIHRleHQgaGFzIGFcblx0Ly8gMjhweCBsaW5lIGhlaWdodCBhbmQgdGhlIGNoZWNrbWFyayBpcyAyNHB4IHRhbGwsIGEgKDI4LTI0KS8yID0gMnB4IG1hcmdpblxuXHQvLyBpcyBhcHBsaWVkIHRvIGtlZXAgdGhlIGNvcnJlY3QgYWxpZ25tZW50IGJldHdlZW4gdGhlIHRleHQgYW5kIHRoZSBjaGVja21hcmsuXG5cdGFsaWduLXNlbGY6IHN0YXJ0O1xuXHRtYXJnaW4tYmxvY2stc3RhcnQ6IDJweDtcblxuXHQvLyBTaW5jZSB0aGUgY2hlY2ttYXJrJ3MgZGltZW5zaW9ucyBhcmUgYXBwbGllZCB3aXRoICdlbScgdW5pdHMsIHNldHRpbmcgYVxuXHQvLyBmb250IHNpemUgb2YgMCBhbGxvd3MgdGhlIHNwYWNlIHJlc2VydmVkIGZvciB0aGUgY2hlY2ttYXJrIHRvIGNvbGxhcHNlIGZvclxuXHQvLyBpdGVtcyB0aGF0IGFyZSBub3Qgc2VsZWN0ZWQgb3IgdGhhdCBkb24ndCBoYXZlIGFuIGFzc29jaWF0ZWQgaXRlbSBoaW50LlxuXHRmb250LXNpemU6IDA7XG5cdCR7IFdpdGhIaW50SXRlbVdyYXBwZXIgfSB+ICYsXG5cdCY6bm90KDplbXB0eSkge1xuXHRcdGZvbnQtc2l6ZTogMjRweDsgLy8gU2l6ZSBvZiBjaGVja21hcmsgaWNvblxuXHR9XG5gO1xuIl19 */\"));\nexport const SelectedExperimentalHintItem = /*#__PURE__*/_styled(\"span\", process.env.NODE_ENV === \"production\" ? {\n  target: \"e1p3eej73\"\n} : {\n  target: \"e1p3eej73\",\n  label: \"SelectedExperimentalHintItem\"\n})(\"color:\", COLORS.theme.gray[600], \";margin-inline-start:\", space(2), \";\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));\nexport const WithHintItemWrapper = /*#__PURE__*/_styled(\"div\", process.env.NODE_ENV === \"production\" ? {\n  target: \"e1p3eej72\"\n} : {\n  target: \"e1p3eej72\",\n  label: \"WithHintItemWrapper\"\n})(\"display:flex;justify-content:space-between;align-items:center;flex-wrap:wrap;flex:1;column-gap:\", space(4), \";\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));\nexport const WithHintItemHint = /*#__PURE__*/_styled(\"span\", process.env.NODE_ENV === \"production\" ? {\n  target: \"e1p3eej71\"\n} : {\n  target: \"e1p3eej71\",\n  label: \"WithHintItemHint\"\n})(\"color:\", COLORS.theme.gray[600], \";text-align:initial;line-height:\", CONFIG.fontLineHeightBase, \";padding-inline-end:\", space(1), \";margin-block:\", space(1), \";\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));\nexport const SelectedItemCheck = /*#__PURE__*/_styled(Ariakit.SelectItemCheck, process.env.NODE_ENV === \"production\" ? {\n  target: \"e1p3eej70\"\n} : {\n  target: \"e1p3eej70\",\n  label: \"SelectedItemCheck\"\n})(\"display:flex;align-items:center;margin-inline-start:\", space(2), \";fill:currentColor;align-self:start;margin-block-start:2px;font-size:0;\", WithHintItemWrapper, \"~&,&:not(:empty){font-size:24px;}\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));"],
  "mappings": "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",
  "names": ["_styled"]
}
