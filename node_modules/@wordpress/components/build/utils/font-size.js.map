{
  "version": 3,
  "sources": ["../../src/utils/font-size.ts"],
  "sourcesContent": ["/**\n * External dependencies\n */\n\n/**\n * Internal dependencies\n */\nimport CONFIG from './config-values';\nexport const BASE_FONT_SIZE = 13;\nexport const PRESET_FONT_SIZES = {\n  body: BASE_FONT_SIZE,\n  caption: 10,\n  footnote: 11,\n  largeTitle: 28,\n  subheadline: 12,\n  title: 20\n};\nexport const HEADING_FONT_SIZES = [1, 2, 3, 4, 5, 6].flatMap(n => [n, n.toString()]);\nexport function getFontSize(size = BASE_FONT_SIZE) {\n  if (size in PRESET_FONT_SIZES) {\n    return getFontSize(PRESET_FONT_SIZES[size]);\n  }\n  if (typeof size !== 'number') {\n    const parsed = parseFloat(size);\n    if (Number.isNaN(parsed)) {\n      return size;\n    }\n    size = parsed;\n  }\n  const ratio = `(${size} / ${BASE_FONT_SIZE})`;\n  return `calc(${ratio} * ${CONFIG.fontSize})`;\n}\nexport function getHeadingFontSize(size = 3) {\n  if (!HEADING_FONT_SIZES.includes(size)) {\n    return getFontSize(size);\n  }\n  const headingSize = `fontSizeH${size}`;\n  return CONFIG[headingSize];\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,2BAAmB;AACZ,MAAM,iBAAiB;AACvB,MAAM,oBAAoB;AAAA,EAC/B,MAAM;AAAA,EACN,SAAS;AAAA,EACT,UAAU;AAAA,EACV,YAAY;AAAA,EACZ,aAAa;AAAA,EACb,OAAO;AACT;AACO,MAAM,qBAAqB,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,QAAQ,OAAK,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;AAC5E,SAAS,YAAY,OAAO,gBAAgB;AACjD,MAAI,QAAQ,mBAAmB;AAC7B,WAAO,YAAY,kBAAkB,IAAI,CAAC;AAAA,EAC5C;AACA,MAAI,OAAO,SAAS,UAAU;AAC5B,UAAM,SAAS,WAAW,IAAI;AAC9B,QAAI,OAAO,MAAM,MAAM,GAAG;AACxB,aAAO;AAAA,IACT;AACA,WAAO;AAAA,EACT;AACA,QAAM,QAAQ,IAAI,IAAI,MAAM,cAAc;AAC1C,SAAO,QAAQ,KAAK,MAAM,qBAAAA,QAAO,QAAQ;AAC3C;AACO,SAAS,mBAAmB,OAAO,GAAG;AAC3C,MAAI,CAAC,mBAAmB,SAAS,IAAI,GAAG;AACtC,WAAO,YAAY,IAAI;AAAA,EACzB;AACA,QAAM,cAAc,YAAY,IAAI;AACpC,SAAO,qBAAAA,QAAO,WAAW;AAC3B;",
  "names": ["CONFIG"]
}
