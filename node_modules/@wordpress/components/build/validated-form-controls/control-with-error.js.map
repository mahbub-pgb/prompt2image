{
  "version": 3,
  "sources": ["../../src/validated-form-controls/control-with-error.tsx"],
  "sourcesContent": ["/**\n * WordPress dependencies\n */\nimport { usePrevious } from '@wordpress/compose';\nimport { __ } from '@wordpress/i18n';\nimport { cloneElement, forwardRef, useEffect, useState } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { withIgnoreIMEEvents } from '../utils/with-ignore-ime-events';\nimport { ValidityIndicator } from './validity-indicator';\nimport { Fragment as _Fragment, jsxs as _jsxs, jsx as _jsx } from \"react/jsx-runtime\";\nfunction appendRequiredIndicator(label, required, markWhenOptional) {\n  if (required && !markWhenOptional) {\n    return /*#__PURE__*/_jsxs(_Fragment, {\n      children: [label, \" \", `(${__('Required')})`]\n    });\n  }\n  if (!required && markWhenOptional) {\n    return /*#__PURE__*/_jsxs(_Fragment, {\n      children: [label, \" \", `(${__('Optional')})`]\n    });\n  }\n  return label;\n}\n\n/**\n * HTML elements that support the Constraint Validation API.\n *\n * Here, we exclude HTMLButtonElement because although it does technically support the API,\n * normal buttons are actually exempted from any validation.\n * @see https://developer.mozilla.org/en-US/docs/Learn_web_development/Extensions/Forms/Form_validation\n * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLButtonElement/willValidate\n */\n\nfunction UnforwardedControlWithError({\n  required,\n  markWhenOptional,\n  onValidate,\n  customValidity,\n  getValidityTarget,\n  children\n}, forwardedRef) {\n  const [errorMessage, setErrorMessage] = useState();\n  const [statusMessage, setStatusMessage] = useState();\n  const [isTouched, setIsTouched] = useState(false);\n  const previousCustomValidityType = usePrevious(customValidity?.type);\n\n  // Ensure that error messages are visible after user attemps to submit a form\n  // with multiple invalid fields.\n  useEffect(() => {\n    const validityTarget = getValidityTarget();\n    const showValidationMessage = () => setErrorMessage(validityTarget?.validationMessage);\n    validityTarget?.addEventListener('invalid', showValidationMessage);\n    return () => {\n      validityTarget?.removeEventListener('invalid', showValidationMessage);\n    };\n  });\n  useEffect(() => {\n    if (!isTouched) {\n      return;\n    }\n    const validityTarget = getValidityTarget();\n    if (!customValidity?.type) {\n      validityTarget?.setCustomValidity('');\n      setErrorMessage(validityTarget?.validationMessage);\n      setStatusMessage(undefined);\n      return;\n    }\n    switch (customValidity.type) {\n      case 'validating':\n        {\n          // Wait before showing a validating state.\n          const timer = setTimeout(() => {\n            validityTarget?.setCustomValidity('');\n            setErrorMessage(undefined);\n            setStatusMessage({\n              type: 'validating',\n              message: customValidity.message\n            });\n          }, 1000);\n          return () => clearTimeout(timer);\n        }\n      case 'valid':\n        {\n          // Ensures that we wait for any async responses before showing\n          // a synchronously valid state.\n          if (previousCustomValidityType === 'valid') {\n            break;\n          }\n          validityTarget?.setCustomValidity('');\n          setErrorMessage(validityTarget?.validationMessage);\n          setStatusMessage({\n            type: 'valid',\n            message: customValidity.message\n          });\n          break;\n        }\n      case 'invalid':\n        {\n          var _customValidity$messa;\n          validityTarget?.setCustomValidity((_customValidity$messa = customValidity.message) !== null && _customValidity$messa !== void 0 ? _customValidity$messa : '');\n          setErrorMessage(validityTarget?.validationMessage);\n          setStatusMessage(undefined);\n          break;\n        }\n    }\n  }, [isTouched, customValidity?.type, customValidity?.message, getValidityTarget, previousCustomValidityType]);\n  const onBlur = event => {\n    if (isTouched) {\n      return;\n    }\n\n    // Only consider \"blurred from the component\" if focus has fully left the wrapping div.\n    // This prevents unnecessary blurs from components with multiple focusable elements.\n    if (!event.relatedTarget || !event.currentTarget.contains(event.relatedTarget)) {\n      setIsTouched(true);\n      onValidate?.();\n    }\n  };\n  const onChange = (...args) => {\n    children.props.onChange?.(...args);\n\n    // Only validate incrementally if the field has blurred at least once,\n    // or currently has an error message.\n    if (isTouched || errorMessage) {\n      onValidate?.();\n    }\n  };\n  const onKeyDown = event => {\n    // Ensures that custom validators are triggered when the user submits by pressing Enter,\n    // without ever blurring the control.\n    if (event.key === 'Enter') {\n      onValidate?.();\n    }\n  };\n  return (\n    /*#__PURE__*/\n    // Disable reason: Just listening to a bubbled event, not for interaction.\n    // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n    _jsxs(\"div\", {\n      className: \"components-validated-control\",\n      ref: forwardedRef,\n      onBlur: onBlur,\n      onKeyDown: withIgnoreIMEEvents(onKeyDown),\n      children: [cloneElement(children, {\n        label: appendRequiredIndicator(children.props.label, required, markWhenOptional),\n        onChange,\n        required\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        \"aria-live\": \"polite\",\n        children: [errorMessage && /*#__PURE__*/_jsx(ValidityIndicator, {\n          type: \"invalid\",\n          message: errorMessage\n        }), !errorMessage && statusMessage && /*#__PURE__*/_jsx(ValidityIndicator, {\n          type: statusMessage.type,\n          message: statusMessage.message\n        })]\n      })]\n    })\n  );\n}\nexport const ControlWithError = forwardRef(UnforwardedControlWithError);"],
  "mappings": "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",
  "names": ["_jsxs", "_Fragment", "_jsx"]
}
