{
  "version": 3,
  "sources": ["../../../src/toolbar/toolbar/index.tsx"],
  "sourcesContent": ["/**\n * External dependencies\n */\nimport clsx from 'clsx';\n/**\n * WordPress dependencies\n */\nimport { forwardRef, useMemo } from '@wordpress/element';\nimport deprecated from '@wordpress/deprecated';\n\n/**\n * Internal dependencies\n */\nimport ToolbarGroup from '../toolbar-group';\nimport ToolbarContainer from './toolbar-container';\nimport { ContextSystemProvider } from '../../context';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction UnforwardedToolbar({\n  className,\n  label,\n  variant,\n  ...props\n}, ref) {\n  const isVariantDefined = variant !== undefined;\n  const contextSystemValue = useMemo(() => {\n    if (isVariantDefined) {\n      return {};\n    }\n    return {\n      DropdownMenu: {\n        variant: 'toolbar'\n      },\n      Dropdown: {\n        variant: 'toolbar'\n      },\n      Menu: {\n        variant: 'toolbar'\n      }\n    };\n  }, [isVariantDefined]);\n  if (!label) {\n    deprecated('Using Toolbar without label prop', {\n      since: '5.6',\n      alternative: 'ToolbarGroup component',\n      link: 'https://developer.wordpress.org/block-editor/components/toolbar/'\n    });\n    // Extracting title from `props` because `ToolbarGroup` doesn't accept it.\n    const {\n      title: _title,\n      ...restProps\n    } = props;\n    return /*#__PURE__*/_jsx(ToolbarGroup, {\n      isCollapsed: false,\n      ...restProps,\n      className: className\n    });\n  }\n  // `ToolbarGroup` already uses components-toolbar for compatibility reasons.\n  const finalClassName = clsx('components-accessible-toolbar', className, variant && `is-${variant}`);\n  return /*#__PURE__*/_jsx(ContextSystemProvider, {\n    value: contextSystemValue,\n    children: /*#__PURE__*/_jsx(ToolbarContainer, {\n      className: finalClassName,\n      label: label,\n      ref: ref,\n      ...props\n    })\n  });\n}\n\n/**\n * Renders a toolbar.\n *\n * To add controls, simply pass `ToolbarButton` components as children.\n *\n * ```jsx\n * import { Toolbar, ToolbarButton } from '@wordpress/components';\n * import { formatBold, formatItalic, link } from '@wordpress/icons';\n *\n * function MyToolbar() {\n *   return (\n *     <Toolbar label=\"Options\">\n *       <ToolbarButton icon={ formatBold } label=\"Bold\" />\n *       <ToolbarButton icon={ formatItalic } label=\"Italic\" />\n *       <ToolbarButton icon={ link } label=\"Link\" />\n *     </Toolbar>\n *   );\n * }\n * ```\n */\nexport const Toolbar = forwardRef(UnforwardedToolbar);\nexport default Toolbar;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA,kBAAiB;AAIjB,qBAAoC;AACpC,wBAAuB;AAKvB,2BAAyB;AACzB,+BAA6B;AAC7B,qBAAsC;AACtC,yBAA4B;AAC5B,SAAS,mBAAmB;AAAA,EAC1B;AAAA,EACA;AAAA,EACA;AAAA,EACA,GAAG;AACL,GAAG,KAAK;AACN,QAAM,mBAAmB,YAAY;AACrC,QAAM,yBAAqB,wBAAQ,MAAM;AACvC,QAAI,kBAAkB;AACpB,aAAO,CAAC;AAAA,IACV;AACA,WAAO;AAAA,MACL,cAAc;AAAA,QACZ,SAAS;AAAA,MACX;AAAA,MACA,UAAU;AAAA,QACR,SAAS;AAAA,MACX;AAAA,MACA,MAAM;AAAA,QACJ,SAAS;AAAA,MACX;AAAA,IACF;AAAA,EACF,GAAG,CAAC,gBAAgB,CAAC;AACrB,MAAI,CAAC,OAAO;AACV,0BAAAA,SAAW,oCAAoC;AAAA,MAC7C,OAAO;AAAA,MACP,aAAa;AAAA,MACb,MAAM;AAAA,IACR,CAAC;AAED,UAAM;AAAA,MACJ,OAAO;AAAA,MACP,GAAG;AAAA,IACL,IAAI;AACJ,WAAoB,uCAAAC,KAAK,qBAAAC,SAAc;AAAA,MACrC,aAAa;AAAA,MACb,GAAG;AAAA,MACH;AAAA,IACF,CAAC;AAAA,EACH;AAEA,QAAM,qBAAiB,YAAAC,SAAK,iCAAiC,WAAW,WAAW,MAAM,OAAO,EAAE;AAClG,SAAoB,uCAAAF,KAAK,sCAAuB;AAAA,IAC9C,OAAO;AAAA,IACP,UAAuB,uCAAAA,KAAK,yBAAAG,SAAkB;AAAA,MAC5C,WAAW;AAAA,MACX;AAAA,MACA;AAAA,MACA,GAAG;AAAA,IACL,CAAC;AAAA,EACH,CAAC;AACH;AAsBO,MAAM,cAAU,2BAAW,kBAAkB;AACpD,IAAO,kBAAQ;",
  "names": ["deprecated", "_jsx", "ToolbarGroup", "clsx", "ToolbarContainer"]
}
