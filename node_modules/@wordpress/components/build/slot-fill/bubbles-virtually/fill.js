"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var fill_exports = {};
__export(fill_exports, {
  default: () => Fill
});
module.exports = __toCommonJS(fill_exports);
var import_compose = require("@wordpress/compose");
var import_element = require("@wordpress/element");
var import_slot_fill_context = __toESM(require("./slot-fill-context"));
var import_style_provider = __toESM(require("../../style-provider"));
var import_jsx_runtime = require("react/jsx-runtime");
function Fill({
  name,
  children
}) {
  var _slot$fillProps;
  const registry = (0, import_element.useContext)(import_slot_fill_context.default);
  const slot = (0, import_compose.useObservableValue)(registry.slots, name);
  const instanceRef = (0, import_element.useRef)({});
  (0, import_element.useEffect)(() => {
    const instance = instanceRef.current;
    registry.registerFill(name, instance);
    return () => registry.unregisterFill(name, instance);
  }, [registry, name]);
  if (!slot || !slot.ref.current) {
    return null;
  }
  const wrappedChildren = /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_style_provider.default, {
    document: slot.ref.current.ownerDocument,
    children: typeof children === "function" ? children((_slot$fillProps = slot.fillProps) !== null && _slot$fillProps !== void 0 ? _slot$fillProps : {}) : children
  });
  return (0, import_element.createPortal)(wrappedChildren, slot.ref.current);
}
//# sourceMappingURL=fill.js.map
