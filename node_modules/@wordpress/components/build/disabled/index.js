"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var disabled_exports = {};
__export(disabled_exports, {
  default: () => disabled_default
});
module.exports = __toCommonJS(disabled_exports);
var import_element = require("@wordpress/element");
var import_disabled_styles = require("./styles/disabled-styles");
var import_utils = require("../utils");
var import_jsx_runtime = require("react/jsx-runtime");
const Context = (0, import_element.createContext)(false);
Context.displayName = "DisabledContext";
const {
  Consumer,
  Provider
} = Context;
function Disabled({
  className,
  children,
  isDisabled = true,
  ...props
}) {
  const cx = (0, import_utils.useCx)();
  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(Provider, {
    value: isDisabled,
    children: /* @__PURE__ */ (0, import_jsx_runtime.jsx)("div", {
      // @ts-ignore Reason: inert is a recent HTML attribute
      inert: isDisabled ? "true" : void 0,
      className: isDisabled ? cx(import_disabled_styles.disabledStyles, className, "components-disabled") : void 0,
      ...props,
      children
    })
  });
}
Disabled.Context = Context;
Disabled.Consumer = Consumer;
var disabled_default = Disabled;
//# sourceMappingURL=index.js.map
