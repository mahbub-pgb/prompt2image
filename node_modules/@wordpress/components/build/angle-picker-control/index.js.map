{
  "version": 3,
  "sources": ["../../src/angle-picker-control/index.tsx"],
  "sourcesContent": ["/**\n * External dependencies\n */\n\nimport clsx from 'clsx';\n\n/**\n * WordPress dependencies\n */\nimport { forwardRef } from '@wordpress/element';\nimport { isRTL, __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport { Flex, FlexBlock } from '../flex';\nimport { Spacer } from '../spacer';\nimport NumberControl from '../number-control';\nimport AngleCircle from './angle-circle';\nimport { UnitText } from './styles/angle-picker-control-styles';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction UnforwardedAnglePickerControl(props, ref) {\n  const {\n    className,\n    label = __('Angle'),\n    onChange,\n    value,\n    ...restProps\n  } = props;\n  const handleOnNumberChange = unprocessedValue => {\n    if (onChange === undefined) {\n      return;\n    }\n    const inputValue = unprocessedValue !== undefined && unprocessedValue !== '' ? parseInt(unprocessedValue, 10) : 0;\n    onChange(inputValue);\n  };\n  const classes = clsx('components-angle-picker-control', className);\n  const unitText = /*#__PURE__*/_jsx(UnitText, {\n    children: \"\\xB0\"\n  });\n  const [prefixedUnitText, suffixedUnitText] = isRTL() ? [unitText, null] : [null, unitText];\n  return /*#__PURE__*/_jsxs(Flex, {\n    ...restProps,\n    ref: ref,\n    className: classes,\n    gap: 2,\n    children: [/*#__PURE__*/_jsx(FlexBlock, {\n      children: /*#__PURE__*/_jsx(NumberControl, {\n        __next40pxDefaultSize: true,\n        label: label,\n        className: \"components-angle-picker-control__input-field\",\n        max: 360,\n        min: 0,\n        onChange: handleOnNumberChange,\n        step: \"1\",\n        value: value,\n        spinControls: \"none\",\n        prefix: prefixedUnitText,\n        suffix: suffixedUnitText\n      })\n    }), /*#__PURE__*/_jsx(Spacer, {\n      marginBottom: \"1\",\n      marginTop: \"auto\",\n      children: /*#__PURE__*/_jsx(AngleCircle, {\n        \"aria-hidden\": \"true\",\n        value: value,\n        onChange: onChange\n      })\n    })]\n  });\n}\n\n/**\n * `AnglePickerControl` is a React component to render a UI that allows users to\n * pick an angle. Users can choose an angle in a visual UI with the mouse by\n * dragging an angle indicator inside a circle or by directly inserting the\n * desired angle in a text field.\n *\n * ```jsx\n * import { useState } from '@wordpress/element';\n * import { AnglePickerControl } from '@wordpress/components';\n *\n * function Example() {\n *   const [ angle, setAngle ] = useState( 0 );\n *   return (\n *     <AnglePickerControl\n *       value={ angle }\n *       onChange={ setAngle }\n *     />\n *   );\n * }\n * ```\n */\nexport const AnglePickerControl = forwardRef(UnforwardedAnglePickerControl);\nexport default AnglePickerControl;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA,kBAAiB;AAKjB,qBAA2B;AAC3B,kBAA0B;AAK1B,kBAAgC;AAChC,oBAAuB;AACvB,4BAA0B;AAC1B,0BAAwB;AACxB,yCAAyB;AACzB,yBAA2C;AAC3C,SAAS,8BAA8B,OAAO,KAAK;AACjD,QAAM;AAAA,IACJ;AAAA,IACA,YAAQ,gBAAG,OAAO;AAAA,IAClB;AAAA,IACA;AAAA,IACA,GAAG;AAAA,EACL,IAAI;AACJ,QAAM,uBAAuB,sBAAoB;AAC/C,QAAI,aAAa,QAAW;AAC1B;AAAA,IACF;AACA,UAAM,aAAa,qBAAqB,UAAa,qBAAqB,KAAK,SAAS,kBAAkB,EAAE,IAAI;AAChH,aAAS,UAAU;AAAA,EACrB;AACA,QAAM,cAAU,YAAAA,SAAK,mCAAmC,SAAS;AACjE,QAAM,WAAwB,uCAAAC,KAAK,6CAAU;AAAA,IAC3C,UAAU;AAAA,EACZ,CAAC;AACD,QAAM,CAAC,kBAAkB,gBAAgB,QAAI,mBAAM,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,MAAM,QAAQ;AACzF,SAAoB,uCAAAC,MAAM,kBAAM;AAAA,IAC9B,GAAG;AAAA,IACH;AAAA,IACA,WAAW;AAAA,IACX,KAAK;AAAA,IACL,UAAU,CAAc,uCAAAD,KAAK,uBAAW;AAAA,MACtC,UAAuB,uCAAAA,KAAK,sBAAAE,SAAe;AAAA,QACzC,uBAAuB;AAAA,QACvB;AAAA,QACA,WAAW;AAAA,QACX,KAAK;AAAA,QACL,KAAK;AAAA,QACL,UAAU;AAAA,QACV,MAAM;AAAA,QACN;AAAA,QACA,cAAc;AAAA,QACd,QAAQ;AAAA,QACR,QAAQ;AAAA,MACV,CAAC;AAAA,IACH,CAAC,GAAgB,uCAAAF,KAAK,sBAAQ;AAAA,MAC5B,cAAc;AAAA,MACd,WAAW;AAAA,MACX,UAAuB,uCAAAA,KAAK,oBAAAG,SAAa;AAAA,QACvC,eAAe;AAAA,QACf;AAAA,QACA;AAAA,MACF,CAAC;AAAA,IACH,CAAC,CAAC;AAAA,EACJ,CAAC;AACH;AAuBO,MAAM,yBAAqB,2BAAW,6BAA6B;AAC1E,IAAO,+BAAQ;",
  "names": ["clsx", "_jsx", "_jsxs", "NumberControl", "AngleCircle"]
}
