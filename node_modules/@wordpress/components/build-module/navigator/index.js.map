{
  "version": 3,
  "sources": ["../../src/navigator/index.tsx"],
  "sourcesContent": ["/**\n * Internal dependencies\n */\nimport { Navigator as TopLevelNavigator } from './navigator/component';\nimport { NavigatorScreen } from './navigator-screen/component';\nimport { NavigatorButton } from './navigator-button/component';\nimport { NavigatorBackButton } from './navigator-back-button/component';\nexport { useNavigator } from './use-navigator';\n\n/**\n * The `Navigator` component allows rendering nested views/panels/menus\n * (via the `Navigator.Screen` component) and navigate between them\n * (via the `Navigator.Button` and `Navigator.BackButton` components).\n *\n * ```jsx\n * import { Navigator } from '@wordpress/components';\n *\n * const MyNavigation = () => (\n *   <Navigator initialPath=\"/\">\n *     <Navigator.Screen path=\"/\">\n *       <p>This is the home screen.</p>\n *        <Navigator.Button path=\"/child\">\n *          Navigate to child screen.\n *       </Navigator.Button>\n *     </Navigator.Screen>\n *\n *     <Navigator.Screen path=\"/child\">\n *       <p>This is the child screen.</p>\n *       <Navigator.BackButton>\n *         Go back\n *       </Navigator.BackButton>\n *     </Navigator.Screen>\n *   </Navigator>\n * );\n * ```\n */\nexport const Navigator = Object.assign(TopLevelNavigator, {\n  /**\n   * The `Navigator.Screen` component represents a single view/screen/panel and\n   * should be used in combination with the `Navigator`, the `Navigator.Button`\n   * and the `Navigator.BackButton` components.\n   *\n   * @example\n   * ```jsx\n   * import { Navigator } from '@wordpress/components';\n   *\n   * const MyNavigation = () => (\n   *   <Navigator initialPath=\"/\">\n   *     <Navigator.Screen path=\"/\">\n   *       <p>This is the home screen.</p>\n   *        <Navigator.Button path=\"/child\">\n   *          Navigate to child screen.\n   *       </Navigator.Button>\n   *     </Navigator.Screen>\n   *\n   *     <Navigator.Screen path=\"/child\">\n   *       <p>This is the child screen.</p>\n   *       <Navigator.BackButton>\n   *         Go back\n   *       </Navigator.BackButton>\n   *     </Navigator.Screen>\n   *   </Navigator>\n   * );\n   * ```\n   */\n  Screen: Object.assign(NavigatorScreen, {\n    displayName: 'Navigator.Screen'\n  }),\n  /**\n   * The `Navigator.Button` component can be used to navigate to a screen and\n   * should be used in combination with the `Navigator`, the `Navigator.Screen`\n   * and the `Navigator.BackButton` components.\n   *\n   * @example\n   * ```jsx\n   * import { Navigator } from '@wordpress/components';\n   *\n   * const MyNavigation = () => (\n   *   <Navigator initialPath=\"/\">\n   *     <Navigator.Screen path=\"/\">\n   *       <p>This is the home screen.</p>\n   *        <Navigator.Button path=\"/child\">\n   *          Navigate to child screen.\n   *       </Navigator.Button>\n   *     </Navigator.Screen>\n   *\n   *     <Navigator.Screen path=\"/child\">\n   *       <p>This is the child screen.</p>\n   *       <Navigator.BackButton>\n   *         Go back\n   *       </Navigator.BackButton>\n   *     </Navigator.Screen>\n   *   </Navigator>\n   * );\n   * ```\n   */\n  Button: Object.assign(NavigatorButton, {\n    displayName: 'Navigator.Button'\n  }),\n  /**\n   * The `Navigator.BackButton` component can be used to navigate to a screen and\n   * should be used in combination with the `Navigator`, the `Navigator.Screen`\n   * and the `Navigator.Button` components.\n   *\n   * @example\n   * ```jsx\n   * import { Navigator } from '@wordpress/components';\n   *\n   * const MyNavigation = () => (\n   *   <Navigator initialPath=\"/\">\n   *     <Navigator.Screen path=\"/\">\n   *       <p>This is the home screen.</p>\n   *        <Navigator.Button path=\"/child\">\n   *          Navigate to child screen.\n   *       </Navigator.Button>\n   *     </Navigator.Screen>\n   *\n   *     <Navigator.Screen path=\"/child\">\n   *       <p>This is the child screen.</p>\n   *       <Navigator.BackButton>\n   *         Go back\n   *       </Navigator.BackButton>\n   *     </Navigator.Screen>\n   *   </Navigator>\n   * );\n   * ```\n   */\n  BackButton: Object.assign(NavigatorBackButton, {\n    displayName: 'Navigator.BackButton'\n  })\n});"],
  "mappings": "AAGA,SAAS,aAAa,yBAAyB;AAC/C,SAAS,uBAAuB;AAChC,SAAS,uBAAuB;AAChC,SAAS,2BAA2B;AACpC,SAAS,oBAAoB;AA6BtB,MAAM,YAAY,OAAO,OAAO,mBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA6BxD,QAAQ,OAAO,OAAO,iBAAiB;AAAA,IACrC,aAAa;AAAA,EACf,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA6BD,QAAQ,OAAO,OAAO,iBAAiB;AAAA,IACrC,aAAa;AAAA,EACf,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA6BD,YAAY,OAAO,OAAO,qBAAqB;AAAA,IAC7C,aAAa;AAAA,EACf,CAAC;AACH,CAAC;",
  "names": []
}
