{
  "version": 3,
  "sources": ["../../../src/navigator/navigator/component.tsx"],
  "sourcesContent": ["/**\n * External dependencies\n */\n\n/**\n * WordPress dependencies\n */\nimport { useMemo, useReducer } from '@wordpress/element';\nimport isShallowEqual from '@wordpress/is-shallow-equal';\nimport warning from '@wordpress/warning';\n\n/**\n * Internal dependencies\n */\n\nimport { contextConnect, useContextSystem } from '../../context';\nimport { useCx } from '../../utils/hooks/use-cx';\nimport { patternMatch, findParent } from '../utils/router';\nimport { View } from '../../view';\nimport { NavigatorContext } from '../context';\nimport * as styles from '../styles';\nimport deprecated from '@wordpress/deprecated';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction addScreen({\n  screens\n}, screen) {\n  if (screens.some(s => s.path === screen.path)) {\n    globalThis.SCRIPT_DEBUG === true ? warning(`Navigator: a screen with path ${screen.path} already exists.\nThe screen with id ${screen.id} will not be added.`) : void 0;\n    return screens;\n  }\n  return [...screens, screen];\n}\nfunction removeScreen({\n  screens\n}, screen) {\n  return screens.filter(s => s.id !== screen.id);\n}\nfunction goTo(state, path, options = {}) {\n  var _focusSelectorsCopy2;\n  const {\n    focusSelectors\n  } = state;\n  const currentLocation = {\n    ...state.currentLocation\n  };\n  const {\n    // Default assignments\n    isBack = false,\n    skipFocus = false,\n    // Extract to avoid forwarding\n    replace,\n    focusTargetSelector,\n    // Rest\n    ...restOptions\n  } = options;\n  if (currentLocation.path === path) {\n    return {\n      currentLocation,\n      focusSelectors\n    };\n  }\n  let focusSelectorsCopy;\n  function getFocusSelectorsCopy() {\n    var _focusSelectorsCopy;\n    focusSelectorsCopy = (_focusSelectorsCopy = focusSelectorsCopy) !== null && _focusSelectorsCopy !== void 0 ? _focusSelectorsCopy : new Map(state.focusSelectors);\n    return focusSelectorsCopy;\n  }\n\n  // Set a focus selector that will be used when navigating\n  // back to the current location.\n  if (focusTargetSelector && currentLocation.path) {\n    getFocusSelectorsCopy().set(currentLocation.path, focusTargetSelector);\n  }\n\n  // Get the focus selector for the new location.\n  let currentFocusSelector;\n  if (focusSelectors.get(path)) {\n    if (isBack) {\n      // Use the found focus selector only when navigating back.\n      currentFocusSelector = focusSelectors.get(path);\n    }\n    // Make a copy of the focusSelectors map to remove the focus selector\n    // only if necessary (ie. a focus selector was found).\n    getFocusSelectorsCopy().delete(path);\n  }\n  return {\n    currentLocation: {\n      ...restOptions,\n      isInitial: false,\n      path,\n      isBack,\n      hasRestoredFocus: false,\n      focusTargetSelector: currentFocusSelector,\n      skipFocus\n    },\n    focusSelectors: (_focusSelectorsCopy2 = focusSelectorsCopy) !== null && _focusSelectorsCopy2 !== void 0 ? _focusSelectorsCopy2 : focusSelectors\n  };\n}\nfunction goToParent(state, options = {}) {\n  const {\n    screens,\n    focusSelectors\n  } = state;\n  const currentLocation = {\n    ...state.currentLocation\n  };\n  const currentPath = currentLocation.path;\n  if (currentPath === undefined) {\n    return {\n      currentLocation,\n      focusSelectors\n    };\n  }\n  const parentPath = findParent(currentPath, screens);\n  if (parentPath === undefined) {\n    return {\n      currentLocation,\n      focusSelectors\n    };\n  }\n  return goTo(state, parentPath, {\n    ...options,\n    isBack: true\n  });\n}\nfunction routerReducer(state, action) {\n  let {\n    screens,\n    currentLocation,\n    matchedPath,\n    focusSelectors,\n    ...restState\n  } = state;\n  switch (action.type) {\n    case 'add':\n      screens = addScreen(state, action.screen);\n      break;\n    case 'remove':\n      screens = removeScreen(state, action.screen);\n      break;\n    case 'goto':\n      ({\n        currentLocation,\n        focusSelectors\n      } = goTo(state, action.path, action.options));\n      break;\n    case 'gotoparent':\n      ({\n        currentLocation,\n        focusSelectors\n      } = goToParent(state, action.options));\n      break;\n  }\n\n  // Return early in case there is no change\n  if (screens === state.screens && currentLocation === state.currentLocation) {\n    return state;\n  }\n\n  // Compute the matchedPath\n  const currentPath = currentLocation.path;\n  matchedPath = currentPath !== undefined ? patternMatch(currentPath, screens) : undefined;\n\n  // If the new match is the same as the previous match,\n  // return the previous one to keep immutability.\n  if (matchedPath && state.matchedPath && matchedPath.id === state.matchedPath.id && isShallowEqual(matchedPath.params, state.matchedPath.params)) {\n    matchedPath = state.matchedPath;\n  }\n  return {\n    ...restState,\n    screens,\n    currentLocation,\n    matchedPath,\n    focusSelectors\n  };\n}\nfunction UnconnectedNavigator(props, forwardedRef) {\n  const {\n    initialPath: initialPathProp,\n    children,\n    className,\n    ...otherProps\n  } = useContextSystem(props, 'Navigator');\n  const [routerState, dispatch] = useReducer(routerReducer, initialPathProp, path => ({\n    screens: [],\n    currentLocation: {\n      path,\n      isInitial: true\n    },\n    matchedPath: undefined,\n    focusSelectors: new Map(),\n    initialPath: initialPathProp\n  }));\n\n  // The methods are constant forever, create stable references to them.\n  const methods = useMemo(() => ({\n    // Note: calling goBack calls `goToParent` internally, as it was established\n    // that `goBack` should behave like `goToParent`, and `goToParent` should\n    // be marked as deprecated.\n    goBack: options => dispatch({\n      type: 'gotoparent',\n      options\n    }),\n    goTo: (path, options) => dispatch({\n      type: 'goto',\n      path,\n      options\n    }),\n    goToParent: options => {\n      deprecated(`wp.components.useNavigator().goToParent`, {\n        since: '6.7',\n        alternative: 'wp.components.useNavigator().goBack'\n      });\n      dispatch({\n        type: 'gotoparent',\n        options\n      });\n    },\n    addScreen: screen => dispatch({\n      type: 'add',\n      screen\n    }),\n    removeScreen: screen => dispatch({\n      type: 'remove',\n      screen\n    })\n  }), []);\n  const {\n    currentLocation,\n    matchedPath\n  } = routerState;\n  const navigatorContextValue = useMemo(() => {\n    var _matchedPath$params;\n    return {\n      location: currentLocation,\n      params: (_matchedPath$params = matchedPath?.params) !== null && _matchedPath$params !== void 0 ? _matchedPath$params : {},\n      match: matchedPath?.id,\n      ...methods\n    };\n  }, [currentLocation, matchedPath, methods]);\n  const cx = useCx();\n  const classes = useMemo(() => cx(styles.navigatorWrapper, className), [className, cx]);\n  return /*#__PURE__*/_jsx(View, {\n    ref: forwardedRef,\n    className: classes,\n    ...otherProps,\n    children: /*#__PURE__*/_jsx(NavigatorContext.Provider, {\n      value: navigatorContextValue,\n      children: children\n    })\n  });\n}\nexport const Navigator = contextConnect(UnconnectedNavigator, 'Navigator');"],
  "mappings": "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",
  "names": []
}
