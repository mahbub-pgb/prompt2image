import { useMergeRefs } from "@wordpress/compose";
import { forwardRef, useRef } from "@wordpress/element";
import { ControlWithError } from "../control-with-error";
import CheckboxControl from "../../checkbox-control";
import { jsx as _jsx } from "react/jsx-runtime";
const UnforwardedValidatedCheckboxControl = ({
  required,
  onValidate,
  customValidity,
  onChange,
  markWhenOptional,
  ...restProps
}, forwardedRef) => {
  const validityTargetRef = useRef(null);
  const mergedRefs = useMergeRefs([forwardedRef, validityTargetRef]);
  const valueRef = useRef(restProps.checked);
  return /* @__PURE__ */ _jsx(ControlWithError, {
    required,
    markWhenOptional,
    ref: mergedRefs,
    onValidate: () => {
      return onValidate?.(valueRef.current);
    },
    customValidity,
    getValidityTarget: () => validityTargetRef.current?.querySelector('input[type="checkbox"]'),
    children: /* @__PURE__ */ _jsx(CheckboxControl, {
      __nextHasNoMarginBottom: true,
      onChange: (value) => {
        valueRef.current = value;
        onChange?.(value);
      },
      ...restProps
    })
  });
};
const ValidatedCheckboxControl = forwardRef(UnforwardedValidatedCheckboxControl);
export {
  ValidatedCheckboxControl
};
//# sourceMappingURL=checkbox-control.js.map
