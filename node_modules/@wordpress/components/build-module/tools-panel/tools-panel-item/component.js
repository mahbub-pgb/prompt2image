import { useToolsPanelItem } from "./hook";
import { View } from "../../view";
import { contextConnect } from "../../context";
import { jsx as _jsx } from "react/jsx-runtime";
const UnconnectedToolsPanelItem = (props, forwardedRef) => {
  const {
    children,
    isShown,
    shouldRenderPlaceholder,
    ...toolsPanelItemProps
  } = useToolsPanelItem(props);
  if (!isShown) {
    return shouldRenderPlaceholder ? /* @__PURE__ */ _jsx(View, {
      ...toolsPanelItemProps,
      ref: forwardedRef
    }) : null;
  }
  return /* @__PURE__ */ _jsx(View, {
    ...toolsPanelItemProps,
    ref: forwardedRef,
    children
  });
};
const ToolsPanelItem = contextConnect(UnconnectedToolsPanelItem, "ToolsPanelItem");
var component_default = ToolsPanelItem;
export {
  ToolsPanelItem,
  component_default as default
};
//# sourceMappingURL=component.js.map
