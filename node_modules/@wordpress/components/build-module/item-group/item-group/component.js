import { contextConnect } from "../../context";
import { useItemGroup } from "./hook";
import { ItemGroupContext, useItemGroupContext } from "../context";
import { View } from "../../view";
import { jsx as _jsx } from "react/jsx-runtime";
function UnconnectedItemGroup(props, forwardedRef) {
  const {
    isBordered,
    isSeparated,
    size: sizeProp,
    ...otherProps
  } = useItemGroup(props);
  const {
    size: contextSize
  } = useItemGroupContext();
  const spacedAround = !isBordered && !isSeparated;
  const size = sizeProp || contextSize;
  const contextValue = {
    spacedAround,
    size
  };
  return /* @__PURE__ */ _jsx(ItemGroupContext.Provider, {
    value: contextValue,
    children: /* @__PURE__ */ _jsx(View, {
      ...otherProps,
      ref: forwardedRef
    })
  });
}
const ItemGroup = contextConnect(UnconnectedItemGroup, "ItemGroup");
var component_default = ItemGroup;
export {
  ItemGroup,
  component_default as default
};
//# sourceMappingURL=component.js.map
