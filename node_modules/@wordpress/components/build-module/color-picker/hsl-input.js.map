{
  "version": 3,
  "sources": ["../../src/color-picker/hsl-input.tsx"],
  "sourcesContent": ["/**\n * External dependencies\n */\nimport { colord } from 'colord';\n\n/**\n * WordPress dependencies\n */\nimport { useState, useEffect, useMemo } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { InputWithSlider } from './input-with-slider';\nimport { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const HslInput = ({\n  color,\n  onChange,\n  enableAlpha\n}) => {\n  const colorPropHSLA = useMemo(() => color.toHsl(), [color]);\n  const [internalHSLA, setInternalHSLA] = useState({\n    ...colorPropHSLA\n  });\n  const isInternalColorSameAsReceivedColor = color.isEqual(colord(internalHSLA));\n  useEffect(() => {\n    if (!isInternalColorSameAsReceivedColor) {\n      // Keep internal HSLA color up to date with the received color prop\n      setInternalHSLA(colorPropHSLA);\n    }\n  }, [colorPropHSLA, isInternalColorSameAsReceivedColor]);\n\n  // If the internal color is equal to the received color prop, we can use the\n  // HSLA values from the local state which, compared to the received color prop,\n  // retain more details about the actual H and S values that the user selected,\n  // and thus allow for better UX when interacting with the H and S sliders.\n  const colorValue = isInternalColorSameAsReceivedColor ? internalHSLA : colorPropHSLA;\n  const updateHSLAValue = partialNewValue => {\n    const nextOnChangeValue = colord({\n      ...colorValue,\n      ...partialNewValue\n    });\n\n    // Fire `onChange` only if the resulting color is different from the\n    // current one.\n    // Otherwise, update the internal HSLA color to cause a re-render.\n    if (!color.isEqual(nextOnChangeValue)) {\n      onChange(nextOnChangeValue);\n    } else {\n      setInternalHSLA(prevHSLA => ({\n        ...prevHSLA,\n        ...partialNewValue\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(InputWithSlider, {\n      min: 0,\n      max: 359,\n      label: \"Hue\",\n      abbreviation: \"H\",\n      value: colorValue.h,\n      onChange: nextH => {\n        updateHSLAValue({\n          h: nextH\n        });\n      }\n    }), /*#__PURE__*/_jsx(InputWithSlider, {\n      min: 0,\n      max: 100,\n      label: \"Saturation\",\n      abbreviation: \"S\",\n      value: colorValue.s,\n      onChange: nextS => {\n        updateHSLAValue({\n          s: nextS\n        });\n      }\n    }), /*#__PURE__*/_jsx(InputWithSlider, {\n      min: 0,\n      max: 100,\n      label: \"Lightness\",\n      abbreviation: \"L\",\n      value: colorValue.l,\n      onChange: nextL => {\n        updateHSLAValue({\n          l: nextL\n        });\n      }\n    }), enableAlpha && /*#__PURE__*/_jsx(InputWithSlider, {\n      min: 0,\n      max: 100,\n      label: \"Alpha\",\n      abbreviation: \"A\",\n      value: Math.trunc(100 * colorValue.a),\n      onChange: nextA => {\n        updateHSLAValue({\n          a: nextA / 100\n        });\n      }\n    })]\n  });\n};"],
  "mappings": "AAGA,SAAS,cAAc;AAKvB,SAAS,UAAU,WAAW,eAAe;AAK7C,SAAS,uBAAuB;AAChC,SAAS,OAAO,MAAM,YAAY,WAAW,QAAQ,aAAa;AAC3D,MAAM,WAAW,CAAC;AAAA,EACvB;AAAA,EACA;AAAA,EACA;AACF,MAAM;AACJ,QAAM,gBAAgB,QAAQ,MAAM,MAAM,MAAM,GAAG,CAAC,KAAK,CAAC;AAC1D,QAAM,CAAC,cAAc,eAAe,IAAI,SAAS;AAAA,IAC/C,GAAG;AAAA,EACL,CAAC;AACD,QAAM,qCAAqC,MAAM,QAAQ,OAAO,YAAY,CAAC;AAC7E,YAAU,MAAM;AACd,QAAI,CAAC,oCAAoC;AAEvC,sBAAgB,aAAa;AAAA,IAC/B;AAAA,EACF,GAAG,CAAC,eAAe,kCAAkC,CAAC;AAMtD,QAAM,aAAa,qCAAqC,eAAe;AACvE,QAAM,kBAAkB,qBAAmB;AACzC,UAAM,oBAAoB,OAAO;AAAA,MAC/B,GAAG;AAAA,MACH,GAAG;AAAA,IACL,CAAC;AAKD,QAAI,CAAC,MAAM,QAAQ,iBAAiB,GAAG;AACrC,eAAS,iBAAiB;AAAA,IAC5B,OAAO;AACL,sBAAgB,eAAa;AAAA,QAC3B,GAAG;AAAA,QACH,GAAG;AAAA,MACL,EAAE;AAAA,IACJ;AAAA,EACF;AACA,SAAoB,sBAAM,WAAW;AAAA,IACnC,UAAU,CAAc,qBAAK,iBAAiB;AAAA,MAC5C,KAAK;AAAA,MACL,KAAK;AAAA,MACL,OAAO;AAAA,MACP,cAAc;AAAA,MACd,OAAO,WAAW;AAAA,MAClB,UAAU,WAAS;AACjB,wBAAgB;AAAA,UACd,GAAG;AAAA,QACL,CAAC;AAAA,MACH;AAAA,IACF,CAAC,GAAgB,qBAAK,iBAAiB;AAAA,MACrC,KAAK;AAAA,MACL,KAAK;AAAA,MACL,OAAO;AAAA,MACP,cAAc;AAAA,MACd,OAAO,WAAW;AAAA,MAClB,UAAU,WAAS;AACjB,wBAAgB;AAAA,UACd,GAAG;AAAA,QACL,CAAC;AAAA,MACH;AAAA,IACF,CAAC,GAAgB,qBAAK,iBAAiB;AAAA,MACrC,KAAK;AAAA,MACL,KAAK;AAAA,MACL,OAAO;AAAA,MACP,cAAc;AAAA,MACd,OAAO,WAAW;AAAA,MAClB,UAAU,WAAS;AACjB,wBAAgB;AAAA,UACd,GAAG;AAAA,QACL,CAAC;AAAA,MACH;AAAA,IACF,CAAC,GAAG,eAA4B,qBAAK,iBAAiB;AAAA,MACpD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,OAAO;AAAA,MACP,cAAc;AAAA,MACd,OAAO,KAAK,MAAM,MAAM,WAAW,CAAC;AAAA,MACpC,UAAU,WAAS;AACjB,wBAAgB;AAAA,UACd,GAAG,QAAQ;AAAA,QACb,CAAC;AAAA,MACH;AAAA,IACF,CAAC,CAAC;AAAA,EACJ,CAAC;AACH;",
  "names": []
}
