{
  "version": 3,
  "sources": ["../../src/dashicon/index.tsx"],
  "sourcesContent": ["import { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * @typedef OwnProps\n *\n * @property {import('./types').IconKey} icon        Icon name\n * @property {string}                    [className] Class name\n * @property {number}                    [size]      Size of the icon\n */\n\n/**\n * Internal dependencies\n */\n\nfunction Dashicon({\n  icon,\n  className,\n  size = 20,\n  style = {},\n  ...extraProps\n}) {\n  const iconClass = ['dashicon', 'dashicons', 'dashicons-' + icon, className].filter(Boolean).join(' ');\n\n  // For retro-compatibility reasons (for example if people are overriding icon size with CSS), we add inline styles just if the size is different to the default\n  const sizeStyles =\n  // using `!=` to catch both 20 and \"20\"\n  // eslint-disable-next-line eqeqeq\n  20 != size ? {\n    fontSize: `${size}px`,\n    width: `${size}px`,\n    height: `${size}px`\n  } : {};\n  const styles = {\n    ...sizeStyles,\n    ...style\n  };\n  return /*#__PURE__*/_jsx(\"span\", {\n    className: iconClass,\n    style: styles,\n    ...extraProps\n  });\n}\nexport default Dashicon;"],
  "mappings": "AAAA,SAAS,OAAO,YAAY;AAa5B,SAAS,SAAS;AAAA,EAChB;AAAA,EACA;AAAA,EACA,OAAO;AAAA,EACP,QAAQ,CAAC;AAAA,EACT,GAAG;AACL,GAAG;AACD,QAAM,YAAY,CAAC,YAAY,aAAa,eAAe,MAAM,SAAS,EAAE,OAAO,OAAO,EAAE,KAAK,GAAG;AAGpG,QAAM;AAAA;AAAA;AAAA,IAGN,MAAM,OAAO;AAAA,MACX,UAAU,GAAG,IAAI;AAAA,MACjB,OAAO,GAAG,IAAI;AAAA,MACd,QAAQ,GAAG,IAAI;AAAA,IACjB,IAAI,CAAC;AAAA;AACL,QAAM,SAAS;AAAA,IACb,GAAG;AAAA,IACH,GAAG;AAAA,EACL;AACA,SAAoB,qBAAK,QAAQ;AAAA,IAC/B,WAAW;AAAA,IACX,OAAO;AAAA,IACP,GAAG;AAAA,EACL,CAAC;AACH;AACA,IAAO,mBAAQ;",
  "names": []
}
