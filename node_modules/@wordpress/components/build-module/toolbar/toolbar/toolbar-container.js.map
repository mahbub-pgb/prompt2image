{
  "version": 3,
  "sources": ["../../../src/toolbar/toolbar/toolbar-container.tsx"],
  "sourcesContent": ["/**\n * External dependencies\n */\nimport * as Ariakit from '@ariakit/react';\n/**\n * WordPress dependencies\n */\nimport { forwardRef } from '@wordpress/element';\nimport { isRTL } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport ToolbarContext from '../toolbar-context';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction UnforwardedToolbarContainer({\n  label,\n  ...props\n}, ref) {\n  const toolbarStore = Ariakit.useToolbarStore({\n    focusLoop: true,\n    rtl: isRTL()\n  });\n  return (\n    /*#__PURE__*/\n    // This will provide state for `ToolbarButton`'s\n    _jsx(ToolbarContext.Provider, {\n      value: toolbarStore,\n      children: /*#__PURE__*/_jsx(Ariakit.Toolbar, {\n        ref: ref,\n        \"aria-label\": label,\n        store: toolbarStore,\n        ...props\n      })\n    })\n  );\n}\nexport const ToolbarContainer = forwardRef(UnforwardedToolbarContainer);\nexport default ToolbarContainer;"],
  "mappings": "AAGA,YAAY,aAAa;AAIzB,SAAS,kBAAkB;AAC3B,SAAS,aAAa;AAKtB,OAAO,oBAAoB;AAC3B,SAAS,OAAO,YAAY;AAC5B,SAAS,4BAA4B;AAAA,EACnC;AAAA,EACA,GAAG;AACL,GAAG,KAAK;AACN,QAAM,eAAe,QAAQ,gBAAgB;AAAA,IAC3C,WAAW;AAAA,IACX,KAAK,MAAM;AAAA,EACb,CAAC;AACD;AAAA;AAAA,IAGE,qBAAK,eAAe,UAAU;AAAA,MAC5B,OAAO;AAAA,MACP,UAAuB,qBAAK,QAAQ,SAAS;AAAA,QAC3C;AAAA,QACA,cAAc;AAAA,QACd,OAAO;AAAA,QACP,GAAG;AAAA,MACL,CAAC;AAAA,IACH,CAAC;AAAA;AAEL;AACO,MAAM,mBAAmB,WAAW,2BAA2B;AACtE,IAAO,4BAAQ;",
  "names": []
}
