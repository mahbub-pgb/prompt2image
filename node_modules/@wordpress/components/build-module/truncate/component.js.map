{
  "version": 3,
  "sources": ["../../src/truncate/component.tsx"],
  "sourcesContent": ["/**\n * External dependencies\n */\n\n/**\n * Internal dependencies\n */\n\nimport { contextConnect } from '../context';\nimport { View } from '../view';\nimport useTruncate from './hook';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction UnconnectedTruncate(props, forwardedRef) {\n  const truncateProps = useTruncate(props);\n  return /*#__PURE__*/_jsx(View, {\n    as: \"span\",\n    ...truncateProps,\n    ref: forwardedRef\n  });\n}\n\n/**\n * `Truncate` is a typography primitive that trims text content.\n * For almost all cases, it is recommended that `Text`, `Heading`, or\n * `Subheading` is used to render text content. However,`Truncate` is\n * available for custom implementations.\n *\n * ```jsx\n * import { __experimentalTruncate as Truncate } from `@wordpress/components`;\n *\n * function Example() {\n * \treturn (\n * \t\t<Truncate>\n * \t\t\tLorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ex\n * \t\t\tneque, vulputate a diam et, luctus convallis lacus. Vestibulum ac\n * \t\t\tmollis mi. Morbi id elementum massa.\n * \t\t</Truncate>\n * \t);\n * }\n * ```\n */\nexport const Truncate = contextConnect(UnconnectedTruncate, 'Truncate');\nexport default Truncate;"],
  "mappings": "AAQA,SAAS,sBAAsB;AAC/B,SAAS,YAAY;AACrB,OAAO,iBAAiB;AACxB,SAAS,OAAO,YAAY;AAC5B,SAAS,oBAAoB,OAAO,cAAc;AAChD,QAAM,gBAAgB,YAAY,KAAK;AACvC,SAAoB,qBAAK,MAAM;AAAA,IAC7B,IAAI;AAAA,IACJ,GAAG;AAAA,IACH,KAAK;AAAA,EACP,CAAC;AACH;AAsBO,MAAM,WAAW,eAAe,qBAAqB,UAAU;AACtE,IAAO,oBAAQ;",
  "names": []
}
