{
  "version": 3,
  "sources": ["../../../src/toggle-group-control/toggle-group-control/component.tsx"],
  "sourcesContent": ["/**\n * External dependencies\n */\n\n/**\n * WordPress dependencies\n */\nimport { useMemo, useState } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\n\nimport { contextConnect, useContextSystem } from '../../context';\nimport { useCx } from '../../utils/hooks';\nimport BaseControl from '../../base-control';\nimport { VisualLabelWrapper } from './styles';\nimport * as styles from './styles';\nimport { ToggleGroupControlAsRadioGroup } from './as-radio-group';\nimport { ToggleGroupControlAsButtonGroup } from './as-button-group';\nimport { useTrackElementOffsetRect } from '../../utils/element-rect';\nimport { useMergeRefs } from '@wordpress/compose';\nimport { useAnimatedOffsetRect } from '../../utils/hooks/use-animated-offset-rect';\nimport { maybeWarnDeprecated36pxSize } from '../../utils/deprecated-36px-size';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction UnconnectedToggleGroupControl(props, forwardedRef) {\n  const {\n    __nextHasNoMarginBottom = false,\n    __next40pxDefaultSize = false,\n    __shouldNotWarnDeprecated36pxSize,\n    className,\n    isAdaptiveWidth = false,\n    isBlock = false,\n    isDeselectable = false,\n    label,\n    hideLabelFromVision = false,\n    help,\n    onChange,\n    size = 'default',\n    value,\n    children,\n    ...otherProps\n  } = useContextSystem(props, 'ToggleGroupControl');\n  const normalizedSize = __next40pxDefaultSize && size === 'default' ? '__unstable-large' : size;\n  const [selectedElement, setSelectedElement] = useState();\n  const [controlElement, setControlElement] = useState();\n  const refs = useMergeRefs([setControlElement, forwardedRef]);\n  const selectedRect = useTrackElementOffsetRect(value !== null && value !== undefined ? selectedElement : undefined);\n  useAnimatedOffsetRect(controlElement, selectedRect, {\n    prefix: 'selected',\n    dataAttribute: 'indicator-animated',\n    transitionEndFilter: event => event.pseudoElement === '::before',\n    roundRect: true\n  });\n  const cx = useCx();\n  const classes = useMemo(() => cx(styles.toggleGroupControl({\n    isBlock,\n    isDeselectable,\n    size: normalizedSize\n  }), isBlock && styles.block, className), [className, cx, isBlock, isDeselectable, normalizedSize]);\n  const MainControl = isDeselectable ? ToggleGroupControlAsButtonGroup : ToggleGroupControlAsRadioGroup;\n  maybeWarnDeprecated36pxSize({\n    componentName: 'ToggleGroupControl',\n    size,\n    __next40pxDefaultSize,\n    __shouldNotWarnDeprecated36pxSize\n  });\n  return /*#__PURE__*/_jsxs(BaseControl, {\n    help: help,\n    __nextHasNoMarginBottom: __nextHasNoMarginBottom,\n    __associatedWPComponentName: \"ToggleGroupControl\",\n    children: [!hideLabelFromVision && /*#__PURE__*/_jsx(VisualLabelWrapper, {\n      children: /*#__PURE__*/_jsx(BaseControl.VisualLabel, {\n        children: label\n      })\n    }), /*#__PURE__*/_jsx(MainControl, {\n      ...otherProps,\n      setSelectedElement: setSelectedElement,\n      className: classes,\n      isAdaptiveWidth: isAdaptiveWidth,\n      label: label,\n      onChange: onChange,\n      ref: refs,\n      size: normalizedSize,\n      value: value,\n      children: children\n    })]\n  });\n}\n\n/**\n * `ToggleGroupControl` is a form component that lets users choose options\n * represented in horizontal segments. To render options for this control use\n * `ToggleGroupControlOption` component.\n *\n * This component is intended for selecting a single persistent value from a set of options,\n * similar to a how a radio button group would work. If you simply want a toggle to switch between views,\n * use a `TabPanel` instead.\n *\n * Only use this control when you know for sure the labels of items inside won't\n * wrap. For items with longer labels, you can consider a `SelectControl` or a\n * `CustomSelectControl` component instead.\n *\n * ```jsx\n * import {\n *   __experimentalToggleGroupControl as ToggleGroupControl,\n *   __experimentalToggleGroupControlOption as ToggleGroupControlOption,\n * } from '@wordpress/components';\n *\n * function Example() {\n *   return (\n *     <ToggleGroupControl\n *       label=\"my label\"\n *       value=\"vertical\"\n *       isBlock\n *       __nextHasNoMarginBottom\n *       __next40pxDefaultSize\n *     >\n *       <ToggleGroupControlOption value=\"horizontal\" label=\"Horizontal\" />\n *       <ToggleGroupControlOption value=\"vertical\" label=\"Vertical\" />\n *     </ToggleGroupControl>\n *   );\n * }\n * ```\n */\nexport const ToggleGroupControl = contextConnect(UnconnectedToggleGroupControl, 'ToggleGroupControl');\nexport default ToggleGroupControl;"],
  "mappings": "AAOA,SAAS,SAAS,gBAAgB;AAMlC,SAAS,gBAAgB,wBAAwB;AACjD,SAAS,aAAa;AACtB,OAAO,iBAAiB;AACxB,SAAS,0BAA0B;AACnC,YAAY,YAAY;AACxB,SAAS,sCAAsC;AAC/C,SAAS,uCAAuC;AAChD,SAAS,iCAAiC;AAC1C,SAAS,oBAAoB;AAC7B,SAAS,6BAA6B;AACtC,SAAS,mCAAmC;AAC5C,SAAS,OAAO,MAAM,QAAQ,aAAa;AAC3C,SAAS,8BAA8B,OAAO,cAAc;AAC1D,QAAM;AAAA,IACJ,0BAA0B;AAAA,IAC1B,wBAAwB;AAAA,IACxB;AAAA,IACA;AAAA,IACA,kBAAkB;AAAA,IAClB,UAAU;AAAA,IACV,iBAAiB;AAAA,IACjB;AAAA,IACA,sBAAsB;AAAA,IACtB;AAAA,IACA;AAAA,IACA,OAAO;AAAA,IACP;AAAA,IACA;AAAA,IACA,GAAG;AAAA,EACL,IAAI,iBAAiB,OAAO,oBAAoB;AAChD,QAAM,iBAAiB,yBAAyB,SAAS,YAAY,qBAAqB;AAC1F,QAAM,CAAC,iBAAiB,kBAAkB,IAAI,SAAS;AACvD,QAAM,CAAC,gBAAgB,iBAAiB,IAAI,SAAS;AACrD,QAAM,OAAO,aAAa,CAAC,mBAAmB,YAAY,CAAC;AAC3D,QAAM,eAAe,0BAA0B,UAAU,QAAQ,UAAU,SAAY,kBAAkB,MAAS;AAClH,wBAAsB,gBAAgB,cAAc;AAAA,IAClD,QAAQ;AAAA,IACR,eAAe;AAAA,IACf,qBAAqB,WAAS,MAAM,kBAAkB;AAAA,IACtD,WAAW;AAAA,EACb,CAAC;AACD,QAAM,KAAK,MAAM;AACjB,QAAM,UAAU,QAAQ,MAAM,GAAG,OAAO,mBAAmB;AAAA,IACzD;AAAA,IACA;AAAA,IACA,MAAM;AAAA,EACR,CAAC,GAAG,WAAW,OAAO,OAAO,SAAS,GAAG,CAAC,WAAW,IAAI,SAAS,gBAAgB,cAAc,CAAC;AACjG,QAAM,cAAc,iBAAiB,kCAAkC;AACvE,8BAA4B;AAAA,IAC1B,eAAe;AAAA,IACf;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC;AACD,SAAoB,sBAAM,aAAa;AAAA,IACrC;AAAA,IACA;AAAA,IACA,6BAA6B;AAAA,IAC7B,UAAU,CAAC,CAAC,uBAAoC,qBAAK,oBAAoB;AAAA,MACvE,UAAuB,qBAAK,YAAY,aAAa;AAAA,QACnD,UAAU;AAAA,MACZ,CAAC;AAAA,IACH,CAAC,GAAgB,qBAAK,aAAa;AAAA,MACjC,GAAG;AAAA,MACH;AAAA,MACA,WAAW;AAAA,MACX;AAAA,MACA;AAAA,MACA;AAAA,MACA,KAAK;AAAA,MACL,MAAM;AAAA,MACN;AAAA,MACA;AAAA,IACF,CAAC,CAAC;AAAA,EACJ,CAAC;AACH;AAqCO,MAAM,qBAAqB,eAAe,+BAA+B,oBAAoB;AACpG,IAAO,oBAAQ;",
  "names": []
}
