"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var event_listeners_exports = {};
__export(event_listeners_exports, {
  useEventListeners: () => useEventListeners
});
module.exports = __toCommonJS(event_listeners_exports);
var import_element = require("@wordpress/element");
var import_compose = require("@wordpress/compose");
var import_copy_handler = __toESM(require("./copy-handler"));
var import_select_object = __toESM(require("./select-object"));
var import_format_boundaries = __toESM(require("./format-boundaries"));
var import_delete = __toESM(require("./delete"));
var import_input_and_selection = __toESM(require("./input-and-selection"));
var import_selection_change_compat = __toESM(require("./selection-change-compat"));
var import_prevent_focus_capture = require("./prevent-focus-capture");
const allEventListeners = [
  import_copy_handler.default,
  import_select_object.default,
  import_format_boundaries.default,
  import_delete.default,
  import_input_and_selection.default,
  import_selection_change_compat.default,
  import_prevent_focus_capture.preventFocusCapture
];
function useEventListeners(props) {
  const propsRef = (0, import_element.useRef)(props);
  (0, import_element.useInsertionEffect)(() => {
    propsRef.current = props;
  });
  const refEffects = (0, import_element.useMemo)(
    () => allEventListeners.map((refEffect) => refEffect(propsRef)),
    [propsRef]
  );
  return (0, import_compose.useRefEffect)(
    (element) => {
      const cleanups = refEffects.map((effect) => effect(element));
      return () => {
        cleanups.forEach((cleanup) => cleanup());
      };
    },
    [refEffects]
  );
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  useEventListeners
});
//# sourceMappingURL=index.js.map
