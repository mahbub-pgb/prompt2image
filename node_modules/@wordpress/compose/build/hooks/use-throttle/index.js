"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var use_throttle_exports = {};
__export(use_throttle_exports, {
  default: () => useThrottle
});
module.exports = __toCommonJS(use_throttle_exports);
var import_use_memo_one = require("use-memo-one");
var import_element = require("@wordpress/element");
var import_throttle = require("../../utils/throttle");
function useThrottle(fn, wait, options) {
  const throttled = (0, import_use_memo_one.useMemoOne)(
    () => (0, import_throttle.throttle)(fn, wait ?? 0, options),
    [fn, wait, options]
  );
  (0, import_element.useEffect)(() => () => throttled.cancel(), [throttled]);
  return throttled;
}
//# sourceMappingURL=index.js.map
