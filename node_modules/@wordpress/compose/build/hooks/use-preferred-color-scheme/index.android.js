"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var index_android_exports = {};
__export(index_android_exports, {
  default: () => index_android_default
});
module.exports = __toCommonJS(index_android_exports);
var import_element = require("@wordpress/element");
var import_react_native_bridge = require("@wordpress/react-native-bridge");
function usePreferredColorScheme() {
  const [currentColorScheme, setCurrentColorScheme] = (0, import_element.useState)(
    import_react_native_bridge.isInitialColorSchemeDark ? "dark" : "light"
  );
  (0, import_element.useEffect)(() => {
    (0, import_react_native_bridge.subscribePreferredColorScheme)(({ isPreferredColorSchemeDark }) => {
      const colorScheme = isPreferredColorSchemeDark ? "dark" : "light";
      if (colorScheme !== currentColorScheme) {
        setCurrentColorScheme(colorScheme);
      }
    });
  });
  return currentColorScheme;
}
var index_android_default = usePreferredColorScheme;
//# sourceMappingURL=index.android.js.map
