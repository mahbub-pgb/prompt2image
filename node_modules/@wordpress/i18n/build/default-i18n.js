"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var default_i18n_exports = {};
__export(default_i18n_exports, {
  __: () => __,
  _n: () => _n,
  _nx: () => _nx,
  _x: () => _x,
  default: () => default_i18n_default,
  getLocaleData: () => getLocaleData,
  hasTranslation: () => hasTranslation,
  isRTL: () => isRTL,
  resetLocaleData: () => resetLocaleData,
  setLocaleData: () => setLocaleData,
  subscribe: () => subscribe
});
module.exports = __toCommonJS(default_i18n_exports);
var import_create_i18n = require("./create-i18n");
var import_hooks = require("@wordpress/hooks");
const i18n = (0, import_create_i18n.createI18n)(void 0, void 0, import_hooks.defaultHooks);
var default_i18n_default = i18n;
const getLocaleData = i18n.getLocaleData.bind(i18n);
const setLocaleData = i18n.setLocaleData.bind(i18n);
const resetLocaleData = i18n.resetLocaleData.bind(i18n);
const subscribe = i18n.subscribe.bind(i18n);
const __ = i18n.__.bind(i18n);
const _x = i18n._x.bind(i18n);
const _n = i18n._n.bind(i18n);
const _nx = i18n._nx.bind(i18n);
const isRTL = i18n.isRTL.bind(i18n);
const hasTranslation = i18n.hasTranslation.bind(i18n);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  __,
  _n,
  _nx,
  _x,
  getLocaleData,
  hasTranslation,
  isRTL,
  resetLocaleData,
  setLocaleData,
  subscribe
});
//# sourceMappingURL=default-i18n.js.map
