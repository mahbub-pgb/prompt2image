{
  "version": 3,
  "sources": ["../../../src/redux-store/metadata/reducer.ts"],
  "sourcesContent": ["/**\n * External dependencies\n */\nimport EquivalentKeyMap from 'equivalent-key-map';\nimport type { Reducer } from 'redux';\n\n/**\n * Internal dependencies\n */\nimport { selectorArgsToStateKey, onSubKey } from './utils';\n\ntype Action =\n\t| ReturnType< typeof import('./actions').startResolution >\n\t| ReturnType< typeof import('./actions').finishResolution >\n\t| ReturnType< typeof import('./actions').failResolution >\n\t| ReturnType< typeof import('./actions').startResolutions >\n\t| ReturnType< typeof import('./actions').finishResolutions >\n\t| ReturnType< typeof import('./actions').failResolutions >\n\t| ReturnType< typeof import('./actions').invalidateResolution >\n\t| ReturnType< typeof import('./actions').invalidateResolutionForStore >\n\t| ReturnType<\n\t\t\ttypeof import('./actions').invalidateResolutionForStoreSelector\n\t  >;\n\ntype StateKey = unknown[] | unknown;\nexport type StateValue =\n\t| { status: 'resolving' | 'finished' }\n\t| { status: 'error'; error: Error | unknown };\n\nexport type Status = StateValue[ 'status' ];\nexport type State = EquivalentKeyMap< StateKey, StateValue >;\n\n/**\n * Reducer function returning next state for selector resolution of\n * subkeys, object form:\n *\n *  selectorName -> EquivalentKeyMap<Array,boolean>\n */\nconst subKeysIsResolved: Reducer< Record< string, State >, Action > = onSubKey<\n\tState,\n\tAction\n>( 'selectorName' )( ( state = new EquivalentKeyMap(), action: Action ) => {\n\tswitch ( action.type ) {\n\t\tcase 'START_RESOLUTION': {\n\t\t\tconst nextState = new EquivalentKeyMap( state );\n\t\t\tnextState.set( selectorArgsToStateKey( action.args ), {\n\t\t\t\tstatus: 'resolving',\n\t\t\t} );\n\t\t\treturn nextState;\n\t\t}\n\t\tcase 'FINISH_RESOLUTION': {\n\t\t\tconst nextState = new EquivalentKeyMap( state );\n\t\t\tnextState.set( selectorArgsToStateKey( action.args ), {\n\t\t\t\tstatus: 'finished',\n\t\t\t} );\n\t\t\treturn nextState;\n\t\t}\n\t\tcase 'FAIL_RESOLUTION': {\n\t\t\tconst nextState = new EquivalentKeyMap( state );\n\t\t\tnextState.set( selectorArgsToStateKey( action.args ), {\n\t\t\t\tstatus: 'error',\n\t\t\t\terror: action.error,\n\t\t\t} );\n\t\t\treturn nextState;\n\t\t}\n\t\tcase 'START_RESOLUTIONS': {\n\t\t\tconst nextState = new EquivalentKeyMap( state );\n\t\t\tfor ( const resolutionArgs of action.args ) {\n\t\t\t\tnextState.set( selectorArgsToStateKey( resolutionArgs ), {\n\t\t\t\t\tstatus: 'resolving',\n\t\t\t\t} );\n\t\t\t}\n\t\t\treturn nextState;\n\t\t}\n\t\tcase 'FINISH_RESOLUTIONS': {\n\t\t\tconst nextState = new EquivalentKeyMap( state );\n\t\t\tfor ( const resolutionArgs of action.args ) {\n\t\t\t\tnextState.set( selectorArgsToStateKey( resolutionArgs ), {\n\t\t\t\t\tstatus: 'finished',\n\t\t\t\t} );\n\t\t\t}\n\t\t\treturn nextState;\n\t\t}\n\t\tcase 'FAIL_RESOLUTIONS': {\n\t\t\tconst nextState = new EquivalentKeyMap( state );\n\t\t\taction.args.forEach( ( resolutionArgs, idx ) => {\n\t\t\t\tconst resolutionState: StateValue = {\n\t\t\t\t\tstatus: 'error',\n\t\t\t\t\terror: undefined,\n\t\t\t\t};\n\n\t\t\t\tconst error = action.errors[ idx ];\n\t\t\t\tif ( error ) {\n\t\t\t\t\tresolutionState.error = error;\n\t\t\t\t}\n\n\t\t\t\tnextState.set(\n\t\t\t\t\tselectorArgsToStateKey( resolutionArgs as unknown[] ),\n\t\t\t\t\tresolutionState\n\t\t\t\t);\n\t\t\t} );\n\t\t\treturn nextState;\n\t\t}\n\t\tcase 'INVALIDATE_RESOLUTION': {\n\t\t\tconst nextState = new EquivalentKeyMap( state );\n\t\t\tnextState.delete( selectorArgsToStateKey( action.args ) );\n\t\t\treturn nextState;\n\t\t}\n\t}\n\treturn state;\n} );\n\n/**\n * Reducer function returning next state for selector resolution, object form:\n *\n *   selectorName -> EquivalentKeyMap<Array, boolean>\n *\n * @param state  Current state.\n * @param action Dispatched action.\n *\n * @return Next state.\n */\nconst isResolved = ( state: Record< string, State > = {}, action: Action ) => {\n\tswitch ( action.type ) {\n\t\tcase 'INVALIDATE_RESOLUTION_FOR_STORE':\n\t\t\treturn {};\n\t\tcase 'INVALIDATE_RESOLUTION_FOR_STORE_SELECTOR': {\n\t\t\tif ( action.selectorName in state ) {\n\t\t\t\tconst {\n\t\t\t\t\t[ action.selectorName ]: removedSelector,\n\t\t\t\t\t...restState\n\t\t\t\t} = state;\n\t\t\t\treturn restState;\n\t\t\t}\n\t\t\treturn state;\n\t\t}\n\t\tcase 'START_RESOLUTION':\n\t\tcase 'FINISH_RESOLUTION':\n\t\tcase 'FAIL_RESOLUTION':\n\t\tcase 'START_RESOLUTIONS':\n\t\tcase 'FINISH_RESOLUTIONS':\n\t\tcase 'FAIL_RESOLUTIONS':\n\t\tcase 'INVALIDATE_RESOLUTION':\n\t\t\treturn subKeysIsResolved( state, action );\n\t}\n\treturn state;\n};\n\nexport default isResolved;\n"],
  "mappings": "AAGA,OAAO,sBAAsB;AAM7B,SAAS,wBAAwB,gBAAgB;AA6BjD,MAAM,oBAAgE,SAGnE,cAAe,EAAG,CAAE,QAAQ,IAAI,iBAAiB,GAAG,WAAoB;AAC1E,UAAS,OAAO,MAAO;AAAA,IACtB,KAAK,oBAAoB;AACxB,YAAM,YAAY,IAAI,iBAAkB,KAAM;AAC9C,gBAAU,IAAK,uBAAwB,OAAO,IAAK,GAAG;AAAA,QACrD,QAAQ;AAAA,MACT,CAAE;AACF,aAAO;AAAA,IACR;AAAA,IACA,KAAK,qBAAqB;AACzB,YAAM,YAAY,IAAI,iBAAkB,KAAM;AAC9C,gBAAU,IAAK,uBAAwB,OAAO,IAAK,GAAG;AAAA,QACrD,QAAQ;AAAA,MACT,CAAE;AACF,aAAO;AAAA,IACR;AAAA,IACA,KAAK,mBAAmB;AACvB,YAAM,YAAY,IAAI,iBAAkB,KAAM;AAC9C,gBAAU,IAAK,uBAAwB,OAAO,IAAK,GAAG;AAAA,QACrD,QAAQ;AAAA,QACR,OAAO,OAAO;AAAA,MACf,CAAE;AACF,aAAO;AAAA,IACR;AAAA,IACA,KAAK,qBAAqB;AACzB,YAAM,YAAY,IAAI,iBAAkB,KAAM;AAC9C,iBAAY,kBAAkB,OAAO,MAAO;AAC3C,kBAAU,IAAK,uBAAwB,cAAe,GAAG;AAAA,UACxD,QAAQ;AAAA,QACT,CAAE;AAAA,MACH;AACA,aAAO;AAAA,IACR;AAAA,IACA,KAAK,sBAAsB;AAC1B,YAAM,YAAY,IAAI,iBAAkB,KAAM;AAC9C,iBAAY,kBAAkB,OAAO,MAAO;AAC3C,kBAAU,IAAK,uBAAwB,cAAe,GAAG;AAAA,UACxD,QAAQ;AAAA,QACT,CAAE;AAAA,MACH;AACA,aAAO;AAAA,IACR;AAAA,IACA,KAAK,oBAAoB;AACxB,YAAM,YAAY,IAAI,iBAAkB,KAAM;AAC9C,aAAO,KAAK,QAAS,CAAE,gBAAgB,QAAS;AAC/C,cAAM,kBAA8B;AAAA,UACnC,QAAQ;AAAA,UACR,OAAO;AAAA,QACR;AAEA,cAAM,QAAQ,OAAO,OAAQ,GAAI;AACjC,YAAK,OAAQ;AACZ,0BAAgB,QAAQ;AAAA,QACzB;AAEA,kBAAU;AAAA,UACT,uBAAwB,cAA4B;AAAA,UACpD;AAAA,QACD;AAAA,MACD,CAAE;AACF,aAAO;AAAA,IACR;AAAA,IACA,KAAK,yBAAyB;AAC7B,YAAM,YAAY,IAAI,iBAAkB,KAAM;AAC9C,gBAAU,OAAQ,uBAAwB,OAAO,IAAK,CAAE;AACxD,aAAO;AAAA,IACR;AAAA,EACD;AACA,SAAO;AACR,CAAE;AAYF,MAAM,aAAa,CAAE,QAAiC,CAAC,GAAG,WAAoB;AAC7E,UAAS,OAAO,MAAO;AAAA,IACtB,KAAK;AACJ,aAAO,CAAC;AAAA,IACT,KAAK,4CAA4C;AAChD,UAAK,OAAO,gBAAgB,OAAQ;AACnC,cAAM;AAAA,UACL,CAAE,OAAO,YAAa,GAAG;AAAA,UACzB,GAAG;AAAA,QACJ,IAAI;AACJ,eAAO;AAAA,MACR;AACA,aAAO;AAAA,IACR;AAAA,IACA,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AACJ,aAAO,kBAAmB,OAAO,MAAO;AAAA,EAC1C;AACA,SAAO;AACR;AAEA,IAAO,kBAAQ;",
  "names": []
}
