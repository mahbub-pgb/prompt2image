{
  "version": 3,
  "sources": ["../src/registry.js"],
  "sourcesContent": ["/**\n * WordPress dependencies\n */\nimport deprecated from '@wordpress/deprecated';\n\n/**\n * Internal dependencies\n */\nimport createReduxStore from './redux-store';\nimport coreDataStore from './store';\nimport { createEmitter } from './utils/emitter';\nimport { lock, unlock } from './lock-unlock';\n\n/** @typedef {import('./types').StoreDescriptor} StoreDescriptor */\n\n/**\n * @typedef {Object} WPDataRegistry An isolated orchestrator of store registrations.\n *\n * @property {Function} registerGenericStore Given a namespace key and settings\n *                                           object, registers a new generic\n *                                           store.\n * @property {Function} registerStore        Given a namespace key and settings\n *                                           object, registers a new namespace\n *                                           store.\n * @property {Function} subscribe            Given a function callback, invokes\n *                                           the callback on any change to state\n *                                           within any registered store.\n * @property {Function} select               Given a namespace key, returns an\n *                                           object of the  store's registered\n *                                           selectors.\n * @property {Function} dispatch             Given a namespace key, returns an\n *                                           object of the store's registered\n *                                           action dispatchers.\n */\n\n/**\n * @typedef {Object} WPDataPlugin An object of registry function overrides.\n *\n * @property {Function} registerStore registers store.\n */\n\nfunction getStoreName( storeNameOrDescriptor ) {\n\treturn typeof storeNameOrDescriptor === 'string'\n\t\t? storeNameOrDescriptor\n\t\t: storeNameOrDescriptor.name;\n}\n/**\n * Creates a new store registry, given an optional object of initial store\n * configurations.\n *\n * @param {Object}  storeConfigs Initial store configurations.\n * @param {?Object} parent       Parent registry.\n *\n * @return {WPDataRegistry} Data registry.\n */\nexport function createRegistry( storeConfigs = {}, parent = null ) {\n\tconst stores = {};\n\tconst emitter = createEmitter();\n\tlet listeningStores = null;\n\n\t/**\n\t * Global listener called for each store's update.\n\t */\n\tfunction globalListener() {\n\t\temitter.emit();\n\t}\n\n\t/**\n\t * Subscribe to changes to any data, either in all stores in registry, or\n\t * in one specific store.\n\t *\n\t * @param {Function}                listener              Listener function.\n\t * @param {string|StoreDescriptor?} storeNameOrDescriptor Optional store name.\n\t *\n\t * @return {Function} Unsubscribe function.\n\t */\n\tconst subscribe = ( listener, storeNameOrDescriptor ) => {\n\t\t// subscribe to all stores\n\t\tif ( ! storeNameOrDescriptor ) {\n\t\t\treturn emitter.subscribe( listener );\n\t\t}\n\n\t\t// subscribe to one store\n\t\tconst storeName = getStoreName( storeNameOrDescriptor );\n\t\tconst store = stores[ storeName ];\n\t\tif ( store ) {\n\t\t\treturn store.subscribe( listener );\n\t\t}\n\n\t\t// Trying to access a store that hasn't been registered,\n\t\t// this is a pattern rarely used but seen in some places.\n\t\t// We fallback to global `subscribe` here for backward-compatibility for now.\n\t\t// See https://github.com/WordPress/gutenberg/pull/27466 for more info.\n\t\tif ( ! parent ) {\n\t\t\treturn emitter.subscribe( listener );\n\t\t}\n\n\t\treturn parent.subscribe( listener, storeNameOrDescriptor );\n\t};\n\n\t/**\n\t * Calls a selector given the current state and extra arguments.\n\t *\n\t * @param {string|StoreDescriptor} storeNameOrDescriptor Unique namespace identifier for the store\n\t *                                                       or the store descriptor.\n\t *\n\t * @return {*} The selector's returned value.\n\t */\n\tfunction select( storeNameOrDescriptor ) {\n\t\tconst storeName = getStoreName( storeNameOrDescriptor );\n\t\tlisteningStores?.add( storeName );\n\t\tconst store = stores[ storeName ];\n\t\tif ( store ) {\n\t\t\treturn store.getSelectors();\n\t\t}\n\n\t\treturn parent?.select( storeName );\n\t}\n\n\tfunction __unstableMarkListeningStores( callback, ref ) {\n\t\tlisteningStores = new Set();\n\t\ttry {\n\t\t\treturn callback.call( this );\n\t\t} finally {\n\t\t\tref.current = Array.from( listeningStores );\n\t\t\tlisteningStores = null;\n\t\t}\n\t}\n\n\t/**\n\t * Given a store descriptor, returns an object containing the store's selectors pre-bound to\n\t * state so that you only need to supply additional arguments, and modified so that they return\n\t * promises that resolve to their eventual values, after any resolvers have ran.\n\t *\n\t * @param {StoreDescriptor|string} storeNameOrDescriptor The store descriptor. The legacy calling\n\t *                                                       convention of passing the store name is\n\t *                                                       also supported.\n\t *\n\t * @return {Object} Each key of the object matches the name of a selector.\n\t */\n\tfunction resolveSelect( storeNameOrDescriptor ) {\n\t\tconst storeName = getStoreName( storeNameOrDescriptor );\n\t\tlisteningStores?.add( storeName );\n\t\tconst store = stores[ storeName ];\n\t\tif ( store ) {\n\t\t\treturn store.getResolveSelectors();\n\t\t}\n\n\t\treturn parent && parent.resolveSelect( storeName );\n\t}\n\n\t/**\n\t * Given a store descriptor, returns an object containing the store's selectors pre-bound to\n\t * state so that you only need to supply additional arguments, and modified so that they throw\n\t * promises in case the selector is not resolved yet.\n\t *\n\t * @param {StoreDescriptor|string} storeNameOrDescriptor The store descriptor. The legacy calling\n\t *                                                       convention of passing the store name is\n\t *                                                       also supported.\n\t *\n\t * @return {Object} Object containing the store's suspense-wrapped selectors.\n\t */\n\tfunction suspendSelect( storeNameOrDescriptor ) {\n\t\tconst storeName = getStoreName( storeNameOrDescriptor );\n\t\tlisteningStores?.add( storeName );\n\t\tconst store = stores[ storeName ];\n\t\tif ( store ) {\n\t\t\treturn store.getSuspendSelectors();\n\t\t}\n\n\t\treturn parent && parent.suspendSelect( storeName );\n\t}\n\n\t/**\n\t * Returns the available actions for a part of the state.\n\t *\n\t * @param {string|StoreDescriptor} storeNameOrDescriptor Unique namespace identifier for the store\n\t *                                                       or the store descriptor.\n\t *\n\t * @return {*} The action's returned value.\n\t */\n\tfunction dispatch( storeNameOrDescriptor ) {\n\t\tconst storeName = getStoreName( storeNameOrDescriptor );\n\t\tconst store = stores[ storeName ];\n\t\tif ( store ) {\n\t\t\treturn store.getActions();\n\t\t}\n\n\t\treturn parent && parent.dispatch( storeName );\n\t}\n\n\t//\n\t// Deprecated\n\t// TODO: Remove this after `use()` is removed.\n\tfunction withPlugins( attributes ) {\n\t\treturn Object.fromEntries(\n\t\t\tObject.entries( attributes ).map( ( [ key, attribute ] ) => {\n\t\t\t\tif ( typeof attribute !== 'function' ) {\n\t\t\t\t\treturn [ key, attribute ];\n\t\t\t\t}\n\t\t\t\treturn [\n\t\t\t\t\tkey,\n\t\t\t\t\tfunction () {\n\t\t\t\t\t\treturn registry[ key ].apply( null, arguments );\n\t\t\t\t\t},\n\t\t\t\t];\n\t\t\t} )\n\t\t);\n\t}\n\n\t/**\n\t * Registers a store instance.\n\t *\n\t * @param {string}   name        Store registry name.\n\t * @param {Function} createStore Function that creates a store object (getSelectors, getActions, subscribe).\n\t */\n\tfunction registerStoreInstance( name, createStore ) {\n\t\tif ( stores[ name ] ) {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error( 'Store \"' + name + '\" is already registered.' );\n\t\t\treturn stores[ name ];\n\t\t}\n\n\t\tconst store = createStore();\n\n\t\tif ( typeof store.getSelectors !== 'function' ) {\n\t\t\tthrow new TypeError( 'store.getSelectors must be a function' );\n\t\t}\n\t\tif ( typeof store.getActions !== 'function' ) {\n\t\t\tthrow new TypeError( 'store.getActions must be a function' );\n\t\t}\n\t\tif ( typeof store.subscribe !== 'function' ) {\n\t\t\tthrow new TypeError( 'store.subscribe must be a function' );\n\t\t}\n\t\t// The emitter is used to keep track of active listeners when the registry\n\t\t// get paused, that way, when resumed we should be able to call all these\n\t\t// pending listeners.\n\t\tstore.emitter = createEmitter();\n\t\tconst currentSubscribe = store.subscribe;\n\t\tstore.subscribe = ( listener ) => {\n\t\t\tconst unsubscribeFromEmitter = store.emitter.subscribe( listener );\n\t\t\tconst unsubscribeFromStore = currentSubscribe( () => {\n\t\t\t\tif ( store.emitter.isPaused ) {\n\t\t\t\t\tstore.emitter.emit();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tlistener();\n\t\t\t} );\n\n\t\t\treturn () => {\n\t\t\t\tunsubscribeFromStore?.();\n\t\t\t\tunsubscribeFromEmitter?.();\n\t\t\t};\n\t\t};\n\t\tstores[ name ] = store;\n\t\tstore.subscribe( globalListener );\n\n\t\t// Copy private actions and selectors from the parent store.\n\t\tif ( parent ) {\n\t\t\ttry {\n\t\t\t\tunlock( store.store ).registerPrivateActions(\n\t\t\t\t\tunlock( parent ).privateActionsOf( name )\n\t\t\t\t);\n\t\t\t\tunlock( store.store ).registerPrivateSelectors(\n\t\t\t\t\tunlock( parent ).privateSelectorsOf( name )\n\t\t\t\t);\n\t\t\t} catch ( e ) {\n\t\t\t\t// unlock() throws if store.store was not locked.\n\t\t\t\t// The error indicates there's nothing to do here so let's\n\t\t\t\t// ignore it.\n\t\t\t}\n\t\t}\n\n\t\treturn store;\n\t}\n\n\t/**\n\t * Registers a new store given a store descriptor.\n\t *\n\t * @param {StoreDescriptor} store Store descriptor.\n\t */\n\tfunction register( store ) {\n\t\tregisterStoreInstance( store.name, () =>\n\t\t\tstore.instantiate( registry )\n\t\t);\n\t}\n\n\tfunction registerGenericStore( name, store ) {\n\t\tdeprecated( 'wp.data.registerGenericStore', {\n\t\t\tsince: '5.9',\n\t\t\talternative: 'wp.data.register( storeDescriptor )',\n\t\t} );\n\t\tregisterStoreInstance( name, () => store );\n\t}\n\n\t/**\n\t * Registers a standard `@wordpress/data` store.\n\t *\n\t * @param {string} storeName Unique namespace identifier.\n\t * @param {Object} options   Store description (reducer, actions, selectors, resolvers).\n\t *\n\t * @return {Object} Registered store object.\n\t */\n\tfunction registerStore( storeName, options ) {\n\t\tif ( ! options.reducer ) {\n\t\t\tthrow new TypeError( 'Must specify store reducer' );\n\t\t}\n\n\t\tconst store = registerStoreInstance( storeName, () =>\n\t\t\tcreateReduxStore( storeName, options ).instantiate( registry )\n\t\t);\n\n\t\treturn store.store;\n\t}\n\n\tfunction batch( callback ) {\n\t\t// If we're already batching, just call the callback.\n\t\tif ( emitter.isPaused ) {\n\t\t\tcallback();\n\t\t\treturn;\n\t\t}\n\n\t\temitter.pause();\n\t\tObject.values( stores ).forEach( ( store ) => store.emitter.pause() );\n\t\ttry {\n\t\t\tcallback();\n\t\t} finally {\n\t\t\temitter.resume();\n\t\t\tObject.values( stores ).forEach( ( store ) =>\n\t\t\t\tstore.emitter.resume()\n\t\t\t);\n\t\t}\n\t}\n\n\tlet registry = {\n\t\tbatch,\n\t\tstores,\n\t\tnamespaces: stores, // TODO: Deprecate/remove this.\n\t\tsubscribe,\n\t\tselect,\n\t\tresolveSelect,\n\t\tsuspendSelect,\n\t\tdispatch,\n\t\tuse,\n\t\tregister,\n\t\tregisterGenericStore,\n\t\tregisterStore,\n\t\t__unstableMarkListeningStores,\n\t};\n\n\t//\n\t// TODO:\n\t// This function will be deprecated as soon as it is no longer internally referenced.\n\tfunction use( plugin, options ) {\n\t\tif ( ! plugin ) {\n\t\t\treturn;\n\t\t}\n\n\t\tregistry = {\n\t\t\t...registry,\n\t\t\t...plugin( registry, options ),\n\t\t};\n\n\t\treturn registry;\n\t}\n\n\tregistry.register( coreDataStore );\n\n\tfor ( const [ name, config ] of Object.entries( storeConfigs ) ) {\n\t\tregistry.register( createReduxStore( name, config ) );\n\t}\n\n\tif ( parent ) {\n\t\tparent.subscribe( globalListener );\n\t}\n\n\tconst registryWithPlugins = withPlugins( registry );\n\tlock( registryWithPlugins, {\n\t\tprivateActionsOf: ( name ) => {\n\t\t\ttry {\n\t\t\t\treturn unlock( stores[ name ].store ).privateActions;\n\t\t\t} catch ( e ) {\n\t\t\t\t// unlock() throws an error the store was not locked \u2013 this means\n\t\t\t\t// there no private actions are available\n\t\t\t\treturn {};\n\t\t\t}\n\t\t},\n\t\tprivateSelectorsOf: ( name ) => {\n\t\t\ttry {\n\t\t\t\treturn unlock( stores[ name ].store ).privateSelectors;\n\t\t\t} catch ( e ) {\n\t\t\t\treturn {};\n\t\t\t}\n\t\t},\n\t} );\n\treturn registryWithPlugins;\n}\n"],
  "mappings": "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",
  "names": []
}
